{"version":3,"file":"static/chunks/3642.a9675da14c5b22c7.js","mappings":"mPAoBA,IAAMA,EAAkBC,GACtBA,EAAEC,UAAU,CAACC,SAAS,CAACC,MAAM,CAAC,GAAO,CAACC,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAACC,EAAEC,IAAI,GAE9DC,EAA6B,KAEjC,GAAM,UAACC,CAAQ,CAAEC,iBAAkBC,CAAO,iBAAEC,CAAe,CAAC,CADnCC,CAAAA,CACsCC,CADtCD,EAAAA,UAAAA,CAAUA,CAACE,EAAAA,EAAgBA,EAGpD,GAAIJ,EACF,MACE,CAFS,EAET,OAACK,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOC,eAAgB,QAAQ,EAAGC,MAAO,CAACC,WAAY,OAAO,WAClF,WAACL,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOI,WAAY,SAAUC,IAAK,EAAE,YACzD,UAACC,EAAAA,CAAOA,CAAAA,CAACC,QAAQ,YACjB,UAACC,MAAAA,CAAIN,MAAO,CAACO,MAAOC,EAAAA,EAAgB,EAAE,WAAG,8BAQjD,GAAIhB,EAAgBiB,MAAM,EAAwB,GAAG,CAAvBpB,EAASoB,MAAM,CAC3C,MAAO,UAACC,EAAAA,EAAQA,CAAAA,CAACC,GAAG,eAGtB,IAAMC,EAAuBvB,EAASL,MAAM,CAAC,GAAOJ,EAAeC,GAAG4B,MAAM,CAAG,GAG/E,GAAoC,IAAhCG,EAAqBH,MAAM,CAAQ,CACrC,IAAMI,EAAqBxB,EAASyB,IAAI,CAAC,GAAOjC,EAAEC,UAAU,CAACiC,WAAW,CAACN,MAAM,EAC/E,GAAII,EACF,MACE,UAACH,EAAAA,EAAQA,CAAAA,CACPC,GAAIK,CAAAA,EAAAA,EAAAA,EAAAA,CAAaA,CACfH,EAAmB/B,UAAU,CAACK,IAAI,CAClC0B,EAAmBI,kBAAkB,CAAC9B,IAAI,CAC1C,iBAAyE,OAAxD0B,EAAmB/B,UAAU,CAACiC,WAAW,CAAC,EAAE,CAAEG,SAAS,IAKlF,QACIN,EAAqBH,MAAM,CAAG,EACzB,CAD4B,EAC5B,OAACC,EAAAA,EAAQA,CAAAA,CAACC,GAAG,cAKf,UAACD,EAAAA,EAAQA,CAAAA,CAACC,GAAG,cACtB,EClEaQ,EDQsB,IAE/B,UAACC,EAAAA,EAAMA,CAAAA,UACL,MCX4CC,CAAC,CDW7C,EAACC,EAAAA,CAAKA,CAAAA,CAACC,KAAK,IAAIC,cAAc,aAC5B,UAACpC,EAAAA,CAAAA","sources":["webpack://_N_E/../ui-core/src/app/BaseFallthroughRoot.tsx","webpack://_N_E/../ui-core/src/app/FallthroughRoot.oss.tsx"],"sourcesContent":["import {Box, Colors, Spinner} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport {Route} from './Route';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {DagsterRepoOption} from '../workspace/WorkspaceContext/util';\nimport {workspacePath} from '../workspace/workspacePath';\n\nexport const BaseFallthroughRoot = () => {\n  return (\n    <Switch>\n      <Route path=\"*\" isNestingRoute>\n        <FinalRedirectOrLoadingRoot />\n      </Route>\n    </Switch>\n  );\n};\n\nconst getVisibleJobs = (r: DagsterRepoOption) =>\n  r.repository.pipelines.filter((j) => !isHiddenAssetGroupJob(j.name));\n\nconst FinalRedirectOrLoadingRoot = () => {\n  const workspaceContext = useContext(WorkspaceContext);\n  const {allRepos, loadingNonAssets: loading, locationEntries} = workspaceContext;\n\n  if (loading) {\n    return (\n      <Box flex={{direction: 'row', justifyContent: 'center'}} style={{paddingTop: '100px'}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 16}}>\n          <Spinner purpose=\"section\" />\n          <div style={{color: Colors.textLight()}}>Loading definitionsâ€¦</div>\n        </Box>\n      </Box>\n    );\n  }\n\n  // If we have location entries but no repos, we have no useful objects to show.\n  // Redirect to Workspace overview to surface relevant errors to the user.\n  if (locationEntries.length && allRepos.length === 0) {\n    return <Redirect to=\"/locations\" />;\n  }\n\n  const reposWithVisibleJobs = allRepos.filter((r) => getVisibleJobs(r).length > 0);\n\n  // If we have no repos with jobs, see if we have an asset group and route to it.\n  if (reposWithVisibleJobs.length === 0) {\n    const repoWithAssetGroup = allRepos.find((r) => r.repository.assetGroups.length);\n    if (repoWithAssetGroup) {\n      return (\n        <Redirect\n          to={workspacePath(\n            repoWithAssetGroup.repository.name,\n            repoWithAssetGroup.repositoryLocation.name,\n            `/asset-groups/${repoWithAssetGroup.repository.assetGroups[0]!.groupName}`,\n          )}\n        />\n      );\n    }\n  }\n  if (reposWithVisibleJobs.length > 0) {\n    return <Redirect to=\"/overview\" />;\n  }\n\n  // Ben note: We only reach here if reposWithVisibleJobs === 0 AND there is no asset group.\n  // In this case, the overview would be blank so we go to the locations page.\n  return <Redirect to=\"/locations\" />;\n};\n","import {BaseFallthroughRoot} from './BaseFallthroughRoot';\n\nexport const FallthroughRoot = BaseFallthroughRoot;\n"],"names":["getVisibleJobs","r","repository","pipelines","filter","isHiddenAssetGroupJob","j","name","FinalRedirectOrLoadingRoot","allRepos","loadingNonAssets","loading","locationEntries","useContext","workspaceContext","WorkspaceContext","Box","flex","direction","justifyContent","style","paddingTop","alignItems","gap","Spinner","purpose","div","color","Colors","length","Redirect","to","reposWithVisibleJobs","repoWithAssetGroup","find","assetGroups","workspacePath","repositoryLocation","groupName","FallthroughRoot","Switch","BaseFallthroughRoot","Route","path","isNestingRoute"],"sourceRoot":"","ignoreList":[]}