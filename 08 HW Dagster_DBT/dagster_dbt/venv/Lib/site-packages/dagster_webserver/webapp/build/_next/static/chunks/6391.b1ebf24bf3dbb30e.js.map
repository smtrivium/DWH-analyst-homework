{"version":3,"file":"static/chunks/6391.b1ebf24bf3dbb30e.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instigation/util.ts","webpack://_N_E/../ui-core/src/ticks/TickStatusTag.tsx","webpack://_N_E/../ui-core/src/overview/OverviewAssetsRoot.tsx","webpack://_N_E/../ui-core/src/overview/OverviewTabs.tsx","webpack://_N_E/../ui-core/src/overview/OverviewPageHeader.tsx","webpack://_N_E/../ui-core/src/runs/ActivatableButton.tsx","webpack://_N_E/../ui-core/src/overview/OverviewActivityRoot.tsx","webpack://_N_E/../ui-core/src/resources/VirtualizedResourceRow.tsx","webpack://_N_E/../ui-core/src/overview/OverviewResourcesTable.tsx","webpack://_N_E/../ui-core/src/ui/SearchInputSpinner.tsx","webpack://_N_E/../ui-core/src/overview/OverviewResourcesRoot.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/AssetDaemonTicksQuery.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/AutomaterializationTickDetailDialog.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/AutomaterializationEvaluationHistoryTable.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/InstanceAutomaterializationEvaluationHistoryTable.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/GlobalAutomaterializationContent.tsx","webpack://_N_E/../ui-core/src/assets/auto-materialization/AutomaterializationRoot.tsx","webpack://_N_E/../ui-core/src/overview/OverviewRoot.tsx","webpack://_N_E/../ui-core/src/overview/sortRepoBuckets.tsx","webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-core/src/automation/AutomationTabs.tsx","webpack://_N_E/../ui-core/src/instigation/LiveTickTimeline2.tsx","webpack://_N_E/../ui-core/src/overview/visibleRepoKeys.tsx"],"sourcesContent":["import {\n  DynamicPartitionsRequestResult,\n  DynamicPartitionsRequestType,\n  InstigationTick,\n  InstigationTickStatus,\n} from '../graphql/types';\n\nconst TRUNCATION_THRESHOLD = 100;\nconst TRUNCATION_BUFFER = 5;\n\nconst THREE_DAYS = 60 * 60 * 24 * 3;\n\nexport const truncate = (str: string) =>\n  str.length > TRUNCATION_THRESHOLD\n    ? `${str.slice(0, TRUNCATION_THRESHOLD - TRUNCATION_BUFFER)}…`\n    : str;\n\nexport function isStuckStartedTick(\n  tick: Pick<InstigationTick, 'timestamp' | 'endTimestamp' | 'status'>,\n  index: number,\n) {\n  return (\n    !tick.endTimestamp &&\n    // If the index is 0 and the tick does have an end timestamp then we can't know if its actually stuck or still in progress\n    // but if its older than three days then its very likely stuck\n    ((index !== 0 && tick.status === InstigationTickStatus.STARTED) ||\n      tick.timestamp * 1000 < Date.now() - THREE_DAYS)\n  );\n}\n\nexport function countPartitionsAddedOrDeleted(\n  requests: Pick<DynamicPartitionsRequestResult, 'partitionKeys' | 'type'>[],\n  type: DynamicPartitionsRequestType,\n) {\n  return requests.reduce((sum, request) => {\n    if (request.type === type) {\n      return sum + (request.partitionKeys?.length || 0);\n    }\n    return sum;\n  }, 0);\n}\n","import {\n  BaseTag,\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Tag,\n  Tooltip,\n  ifPlural,\n} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\n\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {InstigationTickStatus} from '../graphql/types';\nimport {HistoryTickFragment} from '../instigation/types/InstigationUtils.types';\n\nexport type TickResultType = 'runs' | 'materializations';\n\ntype PropsForMaterializations = {\n  tick: Pick<HistoryTickFragment, 'status' | 'requestedAssetMaterializationCount' | 'error'>;\n  tickResultType: 'materializations';\n  isStuckStarted?: boolean;\n};\n\ntype PropsForRuns = {\n  tick: Pick<HistoryTickFragment, 'status' | 'skipReason' | 'runIds' | 'runKeys' | 'error'>;\n  tickResultType: 'runs';\n  isStuckStarted?: boolean;\n};\n\nexport const TickStatusTag = ({\n  tick,\n  tickResultType,\n  isStuckStarted,\n}: PropsForMaterializations | PropsForRuns) => {\n  const [showErrors, setShowErrors] = useState(false);\n  const tag = useMemo(() => {\n    const requestedItem = tickResultType === 'materializations' ? 'materialization' : 'run';\n    switch (tick.status) {\n      case InstigationTickStatus.STARTED:\n        return (\n          <Tag intent=\"primary\" icon={isStuckStarted ? undefined : 'spinner'}>\n            {isStuckStarted ? 'In progress' : 'Evaluating'}\n          </Tag>\n        );\n      case InstigationTickStatus.SKIPPED:\n        const tag = (\n          <BaseTag\n            fillColor={Colors.backgroundLighter()}\n            label={\n              tickResultType === 'materializations'\n                ? '0 materializations requested'\n                : '0 runs requested'\n            }\n          />\n        );\n        if ('runKeys' in tick && tick.runKeys.length) {\n          const message = `${tick.runKeys.length} runs requested, but skipped because the runs already exist for the requested keys.`;\n          return (\n            <Tooltip position=\"right\" content={message}>\n              {tag}\n            </Tooltip>\n          );\n        }\n        if ('skipReason' in tick && tick.skipReason) {\n          return (\n            <Tooltip position=\"right\" content={tick.skipReason} targetTagName=\"div\">\n              {tag}\n            </Tooltip>\n          );\n        }\n        return tag;\n      case InstigationTickStatus.FAILURE:\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 6}}>\n            <Tag intent=\"danger\">Failure</Tag>\n            {tick.error ? (\n              <ButtonLink\n                onClick={() => {\n                  setShowErrors(true);\n                }}\n              >\n                View\n              </ButtonLink>\n            ) : null}\n          </Box>\n        );\n      case InstigationTickStatus.SUCCESS:\n        const count =\n          tickResultType === 'materializations'\n            ? tick.requestedAssetMaterializationCount\n            : tick.runIds.length;\n        const successTag = (\n          <Tag intent=\"success\">\n            {count} {requestedItem}\n            {ifPlural(count, '', 's')} requested\n          </Tag>\n        );\n        if ('runKeys' in tick && tick.runKeys.length > tick.runIds.length) {\n          const message = `${tick.runKeys.length} runs requested, but ${\n            tick.runKeys.length - tick.runIds.length\n          } skipped because the runs already exist for those requested keys.`;\n          return (\n            <Tooltip position=\"right\" content={message}>\n              {successTag}\n            </Tooltip>\n          );\n        }\n        return successTag;\n    }\n  }, [isStuckStarted, tick, tickResultType]);\n\n  return (\n    <>\n      {tag}\n      {tick.error ? (\n        <Dialog isOpen={showErrors} title=\"Error\" style={{width: '80vw'}}>\n          <DialogBody>\n            <PythonErrorInfo error={tick.error} />\n          </DialogBody>\n          <DialogFooter topBorder>\n            <Button\n              intent=\"primary\"\n              onClick={() => {\n                setShowErrors(false);\n              }}\n            >\n              Close\n            </Button>\n          </DialogFooter>\n        </Dialog>\n      ) : null}\n    </>\n  );\n};\n","import {\n  Alert,\n  Box,\n  Caption,\n  Colors,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Tag,\n  TextInput,\n  useViewport,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, RefreshState, useRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useAssetsBaseData} from '../asset-data/AssetBaseDataProvider';\nimport {StatusCase, buildAssetNodeStatusContent} from '../asset-graph/AssetNodeStatusContent';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {groupAssetsByStatus} from '../asset-graph/util';\nimport {partitionCountString} from '../assets/AssetNodePartitionCounts';\nimport {useAllAssets} from '../assets/AssetsCatalogTable';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetCatalogTableQuery} from '../assets/types/AssetsCatalogTable.types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {Container, HeaderCell, HeaderRow, Inner, Row, RowCell} from '../ui/VirtualizedTable';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ntype Props = {\n  Header: React.ComponentType<{refreshState: RefreshState}>;\n  TabButton: React.ComponentType<{selected: 'timeline' | 'assets'}>;\n};\nexport const OverviewAssetsRoot = ({Header, TabButton}: Props) => {\n  useTrackPageView();\n  useDocumentTitle('Overview | Assets');\n\n  const {assets, query, error, loading} = useAllAssets();\n  const refreshState = useRefreshAtInterval<any>({\n    refresh: query,\n    intervalMs: FIFTEEN_SECONDS,\n    leading: true,\n  });\n\n  const groupedAssetsUnfiltered = React.useMemo(() => {\n    if (assets) {\n      return groupAssets(assets);\n    }\n    return [];\n  }, [assets]);\n\n  const [searchValue, setSearchValue] = useQueryPersistedState<string>({\n    queryKey: 'q',\n    encode: (searchQuery) => ({searchQuery: searchQuery ? JSON.stringify(searchQuery) : undefined}),\n    decode: (qs) => {\n      if (typeof qs.searchQuery === 'string') {\n        try {\n          return JSON.parse(qs.searchQuery);\n        } catch {}\n      }\n      return '';\n    },\n  });\n\n  const groupedAssets = React.useMemo(() => {\n    if (searchValue === '') {\n      return groupedAssetsUnfiltered;\n    }\n    return groupedAssetsUnfiltered.filter((group) => {\n      return (\n        (group.groupName || UNGROUPED_ASSETS).toLowerCase().includes(searchValue.toLowerCase()) ||\n        group.repositoryName.toLowerCase().includes(searchValue.toLowerCase())\n      );\n    });\n  }, [groupedAssetsUnfiltered, searchValue]);\n\n  const orderedAssets = React.useMemo(\n    () => groupedAssets.flatMap((group) => group.assets.map((asset) => asset.key)) ?? [],\n    [groupedAssets],\n  );\n  useAssetsBaseData(orderedAssets, 'OverviewAssetsRoot');\n\n  const parentRef = React.useRef<HTMLDivElement | null>(null);\n\n  const rowVirtualizer = useVirtualizer({\n    count: groupedAssets.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 82,\n    overscan: 5,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const items = rowVirtualizer.getVirtualItems();\n\n  function content() {\n    if (loading) {\n      return (\n        <Box\n          flex={{alignItems: 'center', justifyContent: 'center', direction: 'column', grow: 1}}\n          style={{width: '100%'}}\n        >\n          <Spinner purpose=\"page\" />\n        </Box>\n      );\n    }\n    if (error) {\n      return (\n        <Box\n          flex={{alignItems: 'center', justifyContent: 'center', direction: 'column', grow: 1}}\n          style={{width: '100%'}}\n        >\n          <PythonErrorInfo error={error} />\n        </Box>\n      );\n    }\n\n    return (\n      <Box flex={{direction: 'column'}} style={{overflow: 'hidden'}}>\n        <Container ref={parentRef}>\n          <VirtualHeaderRow />\n          <Inner $totalHeight={totalHeight}>\n            {items.map(({index, key, size, start}) => {\n              const group = groupedAssets[index]!;\n              return <VirtualRow key={key} start={start} height={size} group={group} />;\n            })}\n          </Inner>\n        </Container>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <div style={{position: 'sticky', top: 0, zIndex: 1}}>\n        <Header refreshState={refreshState} />\n        <Box\n          padding={{horizontal: 24, vertical: 16}}\n          flex={{alignItems: 'center', gap: 12, grow: 0}}\n        >\n          <TabButton selected=\"assets\" />\n          <TextInput\n            value={searchValue}\n            onChange={(e) => {\n              setSearchValue(e.target.value);\n            }}\n            placeholder=\"Filter asset groups…\"\n          />\n        </Box>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top\">\n          <Alert\n            intent=\"info\"\n            title=\"This Assets tab will be removed in an upcoming release.\"\n            description={\n              <>\n                Use the <Link to=\"/asset-groups\">global asset lineage page</Link> to view grouped\n                asset status details.\n              </>\n            }\n          />\n        </Box>\n      </div>\n      {content()}\n    </>\n  );\n};\n\ntype Assets = Extract<\n  AssetCatalogTableQuery['assetsOrError'],\n  {__typename: 'AssetConnection'}\n>['nodes'];\n\nfunction groupAssets(assets: Assets) {\n  const groups: Record<\n    string,\n    {\n      groupName: string | null;\n      repositoryName: string;\n      assets: Assets;\n    }\n  > = {};\n\n  assets.forEach((asset) => {\n    if (!asset.definition) {\n      return;\n    }\n    const groupName = asset.definition.groupName;\n    const repositoryName = asset.definition.repository.name;\n    const key = `${groupName}||${repositoryName}`;\n    const target = groups[key] || {\n      groupName,\n      repositoryName,\n      assets: [] as Assets,\n    };\n    target.assets.push(asset);\n    groups[key] = target;\n  });\n  return Object.values(groups);\n}\n\nconst TEMPLATE_COLUMNS = '5fr 1fr 1fr 1fr 1fr';\n\nconst VirtualHeaderRow = () => (\n  <HeaderRow templateColumns={TEMPLATE_COLUMNS} sticky>\n    <HeaderCell>Group name</HeaderCell>\n    <HeaderCell>Missing</HeaderCell>\n    <HeaderCell>Failed/Overdue</HeaderCell>\n    <HeaderCell>In progress</HeaderCell>\n    <HeaderCell>Materialized</HeaderCell>\n  </HeaderRow>\n);\n\nconst UNGROUPED_ASSETS = 'Ungrouped Assets';\ntype RowProps = {\n  height: number;\n  start: number;\n  group: ReturnType<typeof groupAssets>[0];\n};\nfunction VirtualRow({height, start, group}: RowProps) {\n  const assetKeys = React.useMemo(\n    () => group.assets.map((asset) => ({path: asset.key.path})),\n    [group.assets],\n  );\n\n  const {liveDataByNode} = useAssetsBaseData(assetKeys);\n\n  const statuses = React.useMemo(() => {\n    return groupAssetsByStatus(group.assets, liveDataByNode);\n  }, [liveDataByNode, group.assets]);\n\n  const repo = group.assets.find((asset) => asset.definition?.repository)?.definition?.repository;\n  const repoAddress = buildRepoAddress(repo?.name || '', repo?.location.name || '');\n\n  const {containerProps, viewport} = useViewport();\n\n  const isBatchStillLoading = assetKeys.length !== Object.keys(liveDataByNode).length;\n  const zeroOrBlank = isBatchStillLoading ? '' : '0';\n\n  return (\n    <Row $height={height} $start={start}>\n      <RowGrid border=\"bottom\">\n        <Cell>\n          <Box flex={{direction: 'row', justifyContent: 'space-between', grow: 1}}>\n            <Box flex={{direction: 'column', gap: 2, grow: 1}}>\n              <Box flex={{direction: 'row', gap: 8}}>\n                <Icon name=\"asset_group\" />\n                {group.groupName ? (\n                  <Link\n                    style={{fontWeight: 700}}\n                    to={workspacePathFromAddress(repoAddress, `/asset-groups/${group.groupName}`)}\n                  >\n                    {group.groupName}\n                  </Link>\n                ) : (\n                  UNGROUPED_ASSETS\n                )}\n              </Box>\n              <div {...containerProps}>\n                <RepositoryLinkWrapper maxWidth={viewport.width}>\n                  <RepositoryLink repoAddress={repoAddress} showRefresh={false} />\n                </RepositoryLinkWrapper>\n              </div>\n            </Box>\n            <Box flex={{direction: 'column', justifyContent: 'center'}}>\n              {isBatchStillLoading ? <Spinner purpose=\"body-text\" /> : null}\n            </Box>\n          </Box>\n        </Cell>\n        <Cell>\n          {statuses.missing.length ? (\n            <SelectOnHover\n              assets={statuses.missing}\n              getCount={({status}) => {\n                if (status.case === StatusCase.PARTITIONS_MISSING) {\n                  return status.numMissing || 0;\n                }\n                return 0;\n              }}\n              adjective=\"missing\"\n            >\n              <Tag intent=\"none\">\n                <Box flex={{direction: 'row', alignItems: 'center', gap: 6}}>\n                  <div\n                    style={{\n                      width: '12px',\n                      height: '12px',\n                      border: `2px solid ${Colors.borderDefault()}`,\n                      borderRadius: '50%',\n                    }}\n                  />\n                  {statuses.missing.length}\n                </Box>\n              </Tag>\n            </SelectOnHover>\n          ) : (\n            zeroOrBlank\n          )}\n        </Cell>\n        <Cell>\n          {statuses.failed.length ? (\n            <SelectOnHover\n              assets={statuses.failed}\n              getCount={({status}) => {\n                if (status.case === StatusCase.PARTITIONS_FAILED) {\n                  return status.numFailed || 0;\n                }\n                return 0;\n              }}\n              adjective=\"failed\"\n            >\n              <Tag intent=\"danger\">\n                <Box flex={{direction: 'row', alignItems: 'center', gap: 6}}>\n                  <div\n                    style={{\n                      width: 0,\n                      height: 0,\n                      borderLeft: '6px solid transparent',\n                      borderRight: '6px solid transparent',\n                      borderBottom: '10px solid red',\n                      display: 'inline-block',\n                    }}\n                  />\n                  {statuses.failed.length}\n                </Box>\n              </Tag>\n            </SelectOnHover>\n          ) : (\n            zeroOrBlank\n          )}\n        </Cell>\n        <Cell>\n          {statuses.inprogress.length ? (\n            <SelectOnHover\n              assets={statuses.inprogress}\n              getCount={({status}) => {\n                if (status.case === StatusCase.MATERIALIZING) {\n                  return status.numMaterializing || 0;\n                }\n                return 0;\n              }}\n              adjective=\"materializing\"\n            >\n              <Tag intent=\"primary\" icon=\"spinner\">\n                {statuses.inprogress.length}\n              </Tag>\n            </SelectOnHover>\n          ) : (\n            zeroOrBlank\n          )}\n        </Cell>\n        <Cell>\n          {statuses.successful.length ? (\n            <SelectOnHover\n              assets={statuses.successful}\n              getCount={({status}) => {\n                if (status.case === StatusCase.PARTITIONS_MATERIALIZED) {\n                  return status.numMaterialized || 0;\n                }\n                return 0;\n              }}\n              adjective=\"materialized\"\n            >\n              <Tag intent=\"success\">\n                <Box flex={{direction: 'row', alignItems: 'center', gap: 6}}>\n                  <div\n                    style={{\n                      backgroundColor: Colors.accentGreen(),\n                      width: '10px',\n                      height: '10px',\n                      borderRadius: '50%',\n                    }}\n                  />\n                  {statuses.successful.length}\n                </Box>\n              </Tag>\n            </SelectOnHover>\n          ) : (\n            zeroOrBlank\n          )}\n        </Cell>\n      </RowGrid>\n    </Row>\n  );\n}\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n  height: 100%;\n  > * {\n    vertical-align: middle;\n  }\n`;\n\nconst Cell = ({children}: {children: React.ReactNode}) => {\n  return (\n    <RowCell style={{color: Colors.textDefault()}}>\n      <Box flex={{direction: 'row', alignItems: 'center', grow: 1}}>{children}</Box>\n    </RowCell>\n  );\n};\n\nconst RepositoryLinkWrapper = styled.div<{maxWidth?: number}>`\n  font-size: 12px;\n  pointer-events: none;\n  a {\n    color: ${Colors.textLight()};\n    pointer-events: none;\n    max-width: ${({maxWidth}) => (maxWidth ? 'unset' : `${maxWidth}px`)};\n  }\n`;\n\ntype AssetWithStatusType = {\n  asset: Assets[0];\n  status: ReturnType<typeof buildAssetNodeStatusContent>;\n};\nfunction SelectOnHover({\n  assets,\n  children,\n  getCount,\n  adjective,\n}: {\n  assets: AssetWithStatusType[];\n  children: React.ReactNode;\n  getCount: (asset: AssetWithStatusType) => number;\n  adjective: string;\n}) {\n  return (\n    <SelectWrapper>\n      <Select\n        items={assets}\n        itemPredicate={(query, item) =>\n          displayNameForAssetKey(item.asset.key)\n            .toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase())\n        }\n        itemRenderer={(item) => {\n          const count = getCount(item);\n          return (\n            <LinkWithNoUnderline to={assetDetailsPathForKey(item.asset.key)} target=\"_blank\">\n              <MenuItem\n                key={displayNameForAssetKey(item.asset.key)}\n                text={\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n                    <div style={{paddingLeft: '4px'}}>\n                      <Icon name=\"asset\" />\n                    </div>\n                    <div\n                      style={{overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis'}}\n                    >\n                      {displayNameForAssetKey(item.asset.key)}\n                    </div>\n                    {count && count > 0 ? (\n                      <Caption style={{color: Colors.textLight()}}>\n                        {partitionCountString(count)} {adjective}\n                      </Caption>\n                    ) : null}\n                  </Box>\n                }\n              />\n            </LinkWithNoUnderline>\n          );\n        }}\n        onItemSelect={() => {}}\n      >\n        {children}\n      </Select>\n    </SelectWrapper>\n  );\n}\n\nconst SelectWrapper = styled.div`\n  cursor: pointer;\n  &:hover {\n    font-weight: 600;\n  }\n`;\n\nconst LinkWithNoUnderline = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`;\n","import {Box, Colors, Spinner, Tabs} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {observeEnabled} from 'shared/app/observeEnabled.oss';\n\nimport {QueryResult} from '../apollo-client';\nimport {QueryRefreshCountdown, RefreshState} from '../app/QueryRefresh';\nimport {AssetFeatureContext} from '../assets/AssetFeatureContext';\nimport {useAutoMaterializeSensorFlag} from '../assets/AutoMaterializeSensorFlag';\nimport {useAutomaterializeDaemonStatus} from '../assets/useAutomaterializeDaemonStatus';\nimport {TabLink} from '../ui/TabLink';\n\ninterface Props<TData> {\n  refreshState?: RefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const OverviewTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const automaterialize = useAutomaterializeDaemonStatus();\n  const automaterializeSensorsFlagState = useAutoMaterializeSensorFlag();\n  const {enableAssetHealthOverviewPreview} = useContext(AssetFeatureContext);\n  const hideAMPTab = observeEnabled();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink id=\"activity\" title=\"Timeline\" to=\"/overview/activity\" />\n        {enableAssetHealthOverviewPreview && (\n          <TabLink id=\"asset-health\" title=\"Asset health\" to=\"/overview/asset-health\" />\n        )}\n        {automaterializeSensorsFlagState === 'has-global-amp' && !hideAMPTab ? (\n          <TabLink\n            id=\"amp\"\n            title={\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <div>Auto-materialize</div>\n                {automaterialize.loading ? (\n                  <Spinner purpose=\"body-text\" />\n                ) : (\n                  <div\n                    style={{\n                      width: '10px',\n                      height: '10px',\n                      borderRadius: '50%',\n                      backgroundColor:\n                        automaterialize.paused === false\n                          ? Colors.accentBlue()\n                          : Colors.accentGray(),\n                    }}\n                  />\n                )}\n              </Box>\n            }\n            to=\"/overview/automation\"\n          />\n        ) : null}\n        <TabLink id=\"resources\" title=\"Resources\" to=\"/overview/resources\" />\n      </Tabs>\n      {refreshState ? (\n        <Box style={{alignSelf: 'center'}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {Box, PageHeader} from '@dagster-io/ui-components';\nimport React from 'react';\nimport {observeEnabled} from 'shared/app/observeEnabled.oss';\n\nimport {OverviewTabs} from './OverviewTabs';\n\nexport const OverviewPageHeader = ({\n  tab,\n  queryData,\n  refreshState,\n  ...rest\n}: React.ComponentProps<typeof OverviewTabs> &\n  Omit<React.ComponentProps<typeof PageHeader>, 'title'>) => {\n  const observeUIEnabled = observeEnabled();\n  if (observeUIEnabled) {\n    return null;\n  }\n\n  return (\n    <PageHeader\n      tabs={\n        <Box flex={{direction: 'column', gap: 8}}>\n          <OverviewTabs tab={tab} queryData={queryData} refreshState={refreshState} />\n        </Box>\n      }\n      {...rest}\n    />\n  );\n};\n","import {Colors} from '@dagster-io/ui-components';\nimport styled, {css} from 'styled-components';\n\nimport {AnchorButton} from '../ui/AnchorButton';\n\nexport const ActivatableButton = styled(AnchorButton)<{$active: boolean}>`\n  color: ${Colors.textLight()};\n\n  &&:hover {\n    color: ${Colors.textLight()};\n  }\n\n  ${({$active}) =>\n    $active\n      ? css`\n          background-color: ${Colors.backgroundLighterHover()};\n          color: ${Colors.textDefault()};\n\n          &&:hover {\n            background-color: ${Colors.backgroundLighterHover()};\n            color: ${Colors.textDefault()};\n          }\n        `\n      : css`\n          background-color: ${Colors.backgroundDefault()};\n        `}\n`;\n","import {Box, JoinedButtons} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport {OverviewAssetsRoot} from './OverviewAssetsRoot';\nimport {OverviewPageHeader} from './OverviewPageHeader';\nimport {OverviewTabs} from './OverviewTabs';\nimport {OverviewTimelineRoot} from './OverviewTimelineRoot';\nimport {Route} from '../app/Route';\nimport {AssetFeatureContext} from '../assets/AssetFeatureContext';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {ActivatableButton} from '../runs/ActivatableButton';\n\nexport const OverviewActivityRoot = () => {\n  useDocumentTitle('Overview | Activity');\n\n  const header = React.useCallback(\n    ({refreshState}: {refreshState: React.ComponentProps<typeof OverviewTabs>['refreshState']}) => (\n      <OverviewPageHeader tab=\"activity\" refreshState={refreshState} />\n    ),\n    [],\n  );\n\n  const [_defaultTab, setDefaultTab] = useStateWithStorage<'timeline' | 'assets'>(\n    'overview-activity-tab',\n    (json) => (['timeline', 'assets'].includes(json) ? json : 'timeline'),\n  );\n\n  const {enableAssetHealthOverviewPreview} = React.useContext(AssetFeatureContext);\n  const defaultTab = enableAssetHealthOverviewPreview ? 'timeline' : _defaultTab;\n\n  const tabButton = React.useCallback(\n    ({selected}: {selected: 'timeline' | 'assets'}) => {\n      if (enableAssetHealthOverviewPreview) {\n        return null;\n      }\n      if (defaultTab !== selected) {\n        setDefaultTab(selected);\n      }\n      return (\n        <JoinedButtons>\n          <ActivatableButton $active={selected === 'timeline'} to=\"/overview/activity/timeline\">\n            Timeline\n          </ActivatableButton>\n          <ActivatableButton $active={selected === 'assets'} to=\"/overview/activity/assets\">\n            Assets\n          </ActivatableButton>\n        </JoinedButtons>\n      );\n    },\n    [defaultTab, setDefaultTab, enableAssetHealthOverviewPreview],\n  );\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <Switch>\n        {!enableAssetHealthOverviewPreview && (\n          <Route path=\"/overview/activity/assets\">\n            <OverviewAssetsRoot Header={header} TabButton={tabButton} />\n          </Route>\n        )}\n        <Route path=\"/overview/activity/timeline\">\n          <OverviewTimelineRoot Header={header} TabButton={tabButton} />\n        </Route>\n        <Route\n          path=\"*\"\n          isNestingRoute\n          render={React.useCallback(\n            () =>\n              defaultTab === 'timeline' ? (\n                <Redirect to=\"/overview/activity/timeline\" />\n              ) : (\n                <Redirect to=\"/overview/activity/assets\" />\n              ),\n            [defaultTab],\n          )}\n        />\n      </Switch>\n    </Box>\n  );\n};\n","import {Box, Caption, Colors, Icon, MiddleTruncate, Mono, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {succinctType} from './ResourceRoot';\nimport {HeaderCell, HeaderRow, Row, RowCell} from '../ui/VirtualizedTable';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\nimport {ResourceEntryFragment} from './types/WorkspaceResourcesQuery.types';\n\nconst TEMPLATE_COLUMNS = '1.5fr 1fr 1fr';\n\ninterface ResourceRowProps extends ResourceEntryFragment {\n  repoAddress: RepoAddress;\n  height: number;\n  start: number;\n}\n\nexport const VirtualizedResourceRow = (props: ResourceRowProps) => {\n  const {\n    name,\n    description,\n    repoAddress,\n    start,\n    height,\n    resourceType,\n    parentResources,\n    jobsOpsUsing,\n    assetKeysUsing,\n    schedulesUsing,\n    sensorsUsing,\n  } = props;\n  const resourceTypeSuccinct = succinctType(resourceType);\n  const uses =\n    parentResources.length +\n    jobsOpsUsing.length +\n    assetKeysUsing.length +\n    schedulesUsing.length +\n    sensorsUsing.length;\n\n  return (\n    <Row $height={height} $start={start}>\n      <RowGrid border=\"bottom\">\n        <RowCell>\n          <Box flex={{direction: 'column', gap: 4}}>\n            <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n              <Icon name=\"resource\" color={Colors.accentGray()} />\n\n              <span style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress, `/resources/${name}`)}>\n                  <MiddleTruncate text={name} />\n                </Link>\n              </span>\n            </Box>\n            <div\n              style={{\n                maxWidth: '100%',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n              }}\n            >\n              <Caption\n                style={{\n                  color: Colors.textLight(),\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                {description}\n              </Caption>\n            </div>\n          </Box>\n        </RowCell>\n        <RowCell>\n          <Tooltip content={resourceType}>\n            <Mono>{resourceTypeSuccinct}</Mono>\n          </Tooltip>\n        </RowCell>\n        <RowCell>\n          <Link to={workspacePathFromAddress(repoAddress, `/resources/${name}/uses`)}>{uses}</Link>\n        </RowCell>\n      </RowGrid>\n    </Row>\n  );\n};\n\nexport const VirtualizedResourceHeader = () => {\n  return (\n    <HeaderRow templateColumns={TEMPLATE_COLUMNS} sticky>\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Type</HeaderCell>\n      <HeaderCell>Uses</HeaderCell>\n    </HeaderRow>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n  height: 100%;\n`;\n","import {Tag, Tooltip} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useMemo, useRef} from 'react';\n\nimport {OVERVIEW_COLLAPSED_KEY} from './OverviewExpansionKey';\nimport {\n  VirtualizedResourceHeader,\n  VirtualizedResourceRow,\n} from '../resources/VirtualizedResourceRow';\nimport {ResourceEntryFragment} from '../resources/types/WorkspaceResourcesQuery.types';\nimport {Container, Inner} from '../ui/VirtualizedTable';\nimport {findDuplicateRepoNames} from '../ui/findDuplicateRepoNames';\nimport {useRepoExpansionState} from '../ui/useRepoExpansionState';\nimport {RepoRow} from '../workspace/VirtualizedWorkspaceTable';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ntype Repository = {\n  repoAddress: RepoAddress;\n  resources: ResourceEntryFragment[];\n};\n\ninterface Props {\n  repos: Repository[];\n}\n\ninterface Resource extends ResourceEntryFragment {\n  type: 'resource';\n  repoAddress: RepoAddress;\n}\n\ntype RowType = {type: 'header'; repoAddress: RepoAddress; resourceCount: number} | Resource;\n\nexport const OverviewResourcesTable = ({repos}: Props) => {\n  const parentRef = useRef<HTMLDivElement | null>(null);\n  const allKeys = useMemo(\n    () => repos.map(({repoAddress}) => repoAddressAsHumanString(repoAddress)),\n    [repos],\n  );\n\n  const {expandedKeys, onToggle, onToggleAll} = useRepoExpansionState(\n    OVERVIEW_COLLAPSED_KEY,\n    allKeys,\n  );\n\n  const flattened: RowType[] = useMemo(() => {\n    const flat: RowType[] = [];\n    repos.forEach(({repoAddress, resources}) => {\n      flat.push({type: 'header', repoAddress, resourceCount: resources.length});\n      const repoKey = repoAddressAsHumanString(repoAddress);\n      if (expandedKeys.includes(repoKey)) {\n        resources.forEach((resource) => {\n          flat.push({type: 'resource', repoAddress, ...resource});\n        });\n      }\n    });\n    return flat;\n  }, [repos, expandedKeys]);\n\n  const duplicateRepoNames = findDuplicateRepoNames(repos.map(({repoAddress}) => repoAddress.name));\n\n  const rowVirtualizer = useVirtualizer({\n    count: flattened.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: (ii: number) => {\n      const row = flattened[ii];\n      return row?.type === 'header' ? 32 : 64;\n    },\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const items = rowVirtualizer.getVirtualItems();\n\n  return (\n    <div style={{overflow: 'hidden'}}>\n      <Container ref={parentRef}>\n        <VirtualizedResourceHeader />\n        <Inner $totalHeight={totalHeight}>\n          {items.map(({index, key, size, start}) => {\n            const row: RowType = flattened[index]!;\n            const type = row!.type;\n            return type === 'header' ? (\n              <RepoRow\n                repoAddress={row.repoAddress}\n                key={key}\n                height={size}\n                start={start}\n                onToggle={onToggle}\n                onToggleAll={onToggleAll}\n                expanded={expandedKeys.includes(repoAddressAsHumanString(row.repoAddress))}\n                showLocation={duplicateRepoNames.has(row.repoAddress.name)}\n                rightElement={\n                  <Tooltip\n                    content={\n                      row.resourceCount === 1 ? '1 resource' : `${row.resourceCount} resources`\n                    }\n                    placement=\"top\"\n                  >\n                    <Tag>{row.resourceCount}</Tag>\n                  </Tooltip>\n                }\n              />\n            ) : (\n              <VirtualizedResourceRow key={key} height={size} start={start} {...row} />\n            );\n          })}\n        </Inner>\n      </Container>\n    </div>\n  );\n};\n","import {Box, Spinner, Tooltip, useDelayedState} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\ninterface Props {\n  tooltipContent: string | React.ReactElement | null;\n}\n\nconst SPINNER_WAIT_MSEC = 2000;\n\nexport const SearchInputSpinner = (props: Props) => {\n  const {tooltipContent} = props;\n  const canShowSpinner = useDelayedState(SPINNER_WAIT_MSEC);\n\n  if (!canShowSpinner) {\n    return null;\n  }\n\n  return (\n    <Box margin={{top: 1}}>\n      <Tooltip placement=\"top\" canShow={!!tooltipContent} content={tooltipContent || ''}>\n        <Spinner purpose=\"body-text\" />\n      </Tooltip>\n    </Box>\n  );\n};\n","import {Box, Colors, NonIdealState, Spinner, TextInput} from '@dagster-io/ui-components';\nimport {useContext, useMemo} from 'react';\n\nimport {OverviewPageHeader} from './OverviewPageHeader';\nimport {OverviewResourcesTable} from './OverviewResourcesTable';\nimport {sortRepoBuckets} from './sortRepoBuckets';\nimport {\n  OverviewResourcesQuery,\n  OverviewResourcesQueryVariables,\n} from './types/OverviewResourcesRoot.types';\nimport {visibleRepoKeys} from './visibleRepoKeys';\nimport {gql, useQuery} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {RESOURCE_ENTRY_FRAGMENT} from '../resources/WorkspaceResourcesQuery';\nimport {ResourceEntryFragment} from '../resources/types/WorkspaceResourcesQuery.types';\nimport {SearchInputSpinner} from '../ui/SearchInputSpinner';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {WorkspaceLocationNodeFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nexport const OverviewResourcesRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Overview | Resources');\n\n  const {\n    allRepos,\n    visibleRepos,\n    loadingNonAssets: workspaceLoading,\n    data: cachedData,\n  } = useContext(WorkspaceContext);\n  const [searchValue, setSearchValue] = useQueryPersistedState<string>({\n    queryKey: 'search',\n    defaults: {search: ''},\n  });\n\n  const repoCount = allRepos.length;\n\n  const queryResultOverview = useQuery<OverviewResourcesQuery, OverviewResourcesQueryVariables>(\n    OVERVIEW_RESOURCES_QUERY,\n    {\n      fetchPolicy: 'network-only',\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const {data, loading: queryLoading} = queryResultOverview;\n  const refreshState = useQueryRefreshAtInterval(queryResultOverview, FIFTEEN_SECONDS);\n\n  // Batch up the data and bucket by repo.\n  const repoBuckets = useMemo(() => {\n    const visibleKeys = visibleRepoKeys(visibleRepos);\n    const cachedEntries = Object.values(cachedData).filter(\n      (location): location is Extract<typeof location, {__typename: 'WorkspaceLocationEntry'}> =>\n        location.__typename === 'WorkspaceLocationEntry',\n    );\n    const workspaceOrError = data?.workspaceOrError;\n    const entries =\n      workspaceOrError?.__typename === 'Workspace'\n        ? workspaceOrError.locationEntries\n        : cachedEntries;\n    return buildBuckets(entries).filter(({repoAddress}) =>\n      visibleKeys.has(repoAddressAsHumanString(repoAddress)),\n    );\n  }, [cachedData, data, visibleRepos]);\n\n  const loading = !data && queryLoading && workspaceLoading;\n\n  const sanitizedSearch = searchValue.trim().toLocaleLowerCase();\n  const anySearch = sanitizedSearch.length > 0;\n\n  const filteredBySearch = useMemo(() => {\n    const searchToLower = sanitizedSearch.toLocaleLowerCase();\n    return repoBuckets\n      .map(({repoAddress, resources}) => ({\n        repoAddress,\n        resources: resources.filter(({name}) => name.toLocaleLowerCase().includes(searchToLower)),\n      }))\n      .filter(({resources}) => resources.length > 0);\n  }, [repoBuckets, sanitizedSearch]);\n\n  const content = () => {\n    if (loading) {\n      return (\n        <Box flex={{direction: 'row', justifyContent: 'center'}} style={{paddingTop: '100px'}}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 16}}>\n            <Spinner purpose=\"body-text\" />\n            <div style={{color: Colors.textLight()}}>Loading resources…</div>\n          </Box>\n        </Box>\n      );\n    }\n\n    const anyReposHidden = allRepos.length > visibleRepos.length;\n\n    if (!filteredBySearch.length) {\n      if (anySearch) {\n        return (\n          <Box padding={{top: 20}}>\n            <NonIdealState\n              icon=\"search\"\n              title=\"No matching resources\"\n              description={\n                anyReposHidden ? (\n                  <div>\n                    No resources matching <strong>{searchValue}</strong> were found in the selected\n                    code locations\n                  </div>\n                ) : (\n                  <div>\n                    No resources matching <strong>{searchValue}</strong> were found in your\n                    definitions\n                  </div>\n                )\n              }\n            />\n          </Box>\n        );\n      }\n\n      return (\n        <Box padding={{top: 20}}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"No resources\"\n            description={\n              anyReposHidden\n                ? 'No resources were found in the selected code locations'\n                : 'No resources were found in your definitions'\n            }\n          />\n        </Box>\n      );\n    }\n\n    return <OverviewResourcesTable repos={filteredBySearch} />;\n  };\n\n  const showSearchSpinner = queryLoading && !data;\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <OverviewPageHeader tab=\"resources\" refreshState={refreshState} />\n      <Box\n        padding={{horizontal: 24, vertical: 16}}\n        flex={{direction: 'row', alignItems: 'center', gap: 12, grow: 0}}\n      >\n        {repoCount > 1 ? <RepoFilterButton /> : null}\n        <TextInput\n          icon=\"search\"\n          value={searchValue}\n          rightElement={\n            showSearchSpinner ? (\n              <SearchInputSpinner tooltipContent=\"Loading resources…\" />\n            ) : undefined\n          }\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Filter by resource name…\"\n          style={{width: '340px'}}\n        />\n      </Box>\n      {loading && !repoCount ? (\n        <Box padding={64}>\n          <Spinner purpose=\"page\" />\n        </Box>\n      ) : (\n        content()\n      )}\n    </Box>\n  );\n};\n\ntype RepoBucket = {\n  repoAddress: RepoAddress;\n  resources: ResourceEntryFragment[];\n};\n\nconst buildBuckets = (\n  locationEntries:\n    | Extract<\n        OverviewResourcesQuery['workspaceOrError'],\n        {__typename: 'Workspace'}\n      >['locationEntries']\n    | Extract<WorkspaceLocationNodeFragment, {__typename: 'WorkspaceLocationEntry'}>[],\n): RepoBucket[] => {\n  const entries = locationEntries.map((entry) => entry.locationOrLoadError);\n  const buckets = [];\n\n  for (const entry of entries) {\n    if (entry?.__typename !== 'RepositoryLocation') {\n      continue;\n    }\n\n    for (const repo of entry.repositories) {\n      const {name, allTopLevelResourceDetails} = repo;\n      const repoAddress = buildRepoAddress(name, entry.name);\n\n      if (allTopLevelResourceDetails.length > 0) {\n        buckets.push({\n          repoAddress,\n          resources: allTopLevelResourceDetails,\n        });\n      }\n    }\n  }\n\n  return sortRepoBuckets(buckets);\n};\n\nconst OVERVIEW_RESOURCES_QUERY = gql`\n  query OverviewResourcesQuery {\n    workspaceOrError {\n      ... on Workspace {\n        id\n        locationEntries {\n          id\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                allTopLevelResourceDetails {\n                  id\n                  ...ResourceEntryFragment\n                }\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RESOURCE_ENTRY_FRAGMENT}\n`;\n","import {gql} from '../../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../../app/PythonErrorFragment';\n\nexport const ASSET_DAEMON_TICK_FRAGMENT = gql`\n  fragment AssetDaemonTickFragment on InstigationTick {\n    id\n    timestamp\n    endTimestamp\n    status\n    instigationType\n    error {\n      ...PythonErrorFragment\n    }\n    requestedAssetKeys {\n      path\n    }\n    requestedAssetMaterializationCount\n    autoMaterializeAssetEvaluationId\n    requestedMaterializationsForAssets {\n      assetKey {\n        path\n      }\n      partitionKeys\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const ASSET_DAEMON_TICKS_QUERY = gql`\n  query AssetDaemonTicksQuery(\n    $dayRange: Int\n    $dayOffset: Int\n    $statuses: [InstigationTickStatus!]\n    $limit: Int\n    $cursor: String\n    $beforeTimestamp: Float\n    $afterTimestamp: Float\n  ) {\n    autoMaterializeTicks(\n      dayRange: $dayRange\n      dayOffset: $dayOffset\n      statuses: $statuses\n      limit: $limit\n      cursor: $cursor\n      beforeTimestamp: $beforeTimestamp\n      afterTimestamp: $afterTimestamp\n    ) {\n      id\n      ...AssetDaemonTickFragment\n    }\n  }\n\n  ${ASSET_DAEMON_TICK_FRAGMENT}\n`;\n","import {Box, DialogHeader} from '@dagster-io/ui-components';\nimport {memo} from 'react';\n\nimport {AssetDaemonTickFragment} from './types/AssetDaemonTicksQuery.types';\nimport {Timestamp} from '../../app/time/Timestamp';\nimport {InstigationTickStatus} from '../../graphql/types';\nimport {TickDetailSummary} from '../../instigation/TickDetailsDialog';\nimport {TickMaterializationsTable} from '../../instigation/TickMaterializationsTable';\nimport {AssetKeysDialog} from '../AutoMaterializePolicyPage/AssetKeysDialog';\n\nexport const AutomaterializationTickDetailDialog = memo(\n  ({\n    tick,\n    isOpen,\n    close,\n  }: {\n    tick: AssetDaemonTickFragment | null;\n    isOpen: boolean;\n    close: () => void;\n  }) => {\n    return (\n      <AssetKeysDialog\n        isOpen={isOpen}\n        setIsOpen={close}\n        height={400}\n        header={\n          <DialogHeader\n            label={\n              tick ? (\n                <div>\n                  <Timestamp timestamp={{unix: tick.timestamp}} timeFormat={{showTimezone: true}} />\n                </div>\n              ) : (\n                ''\n              )\n            }\n          />\n        }\n        content={\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateRows: 'auto auto minmax(0, 1fr)',\n              height: '100%',\n            }}\n          >\n            <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n              {tick ? <TickDetailSummary tick={tick} tickResultType=\"materializations\" /> : null}\n            </Box>\n            {tick?.status === InstigationTickStatus.STARTED ? null : (\n              <TickMaterializationsTable tick={tick} />\n            )}\n          </div>\n        }\n      />\n    );\n  },\n);\n","import {\n  Body2,\n  Box,\n  Button,\n  ButtonLink,\n  CursorHistoryControls,\n  CursorPaginationProps,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Table,\n} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {AssetDaemonTickFragment} from './types/AssetDaemonTicksQuery.types';\nimport {Timestamp} from '../../app/time/Timestamp';\nimport {InstigationTickStatus} from '../../graphql/types';\nimport {TimeElapsed} from '../../runs/TimeElapsed';\nimport {TickStatusTag} from '../../ticks/TickStatusTag';\n\ninterface Props {\n  loading: boolean;\n  ticks: AssetDaemonTickFragment[];\n  tickStatus: AutomaterializationTickStatusDisplay;\n  setTickStatus: (status: AutomaterializationTickStatusDisplay) => void;\n  setSelectedTick: (tick: AssetDaemonTickFragment | null) => void;\n  paginationProps: CursorPaginationProps;\n  actionBarComponents?: React.ReactNode;\n}\n\nexport const AutomaterializationEvaluationHistoryTable = ({\n  loading,\n  ticks,\n  tickStatus,\n  setTickStatus,\n  setSelectedTick,\n  paginationProps,\n  actionBarComponents,\n}: Props) => {\n  return (\n    <Box>\n      <Box\n        flex={{justifyContent: 'space-between', alignItems: 'center'}}\n        padding={{vertical: 12, horizontal: 24}}\n        margin={{top: 32}}\n        border=\"top\"\n      >\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          {actionBarComponents}\n          {loading && !ticks?.length ? <Spinner purpose=\"body-text\" /> : null}\n        </Box>\n        <StatusFilter status={tickStatus} onChange={setTickStatus} />\n      </Box>\n      <TableWrapper>\n        <thead>\n          <tr>\n            <th style={{width: 120}}>Timestamp</th>\n            <th style={{width: 90}}>Status</th>\n            <th style={{width: 90}}>Duration</th>\n            <th style={{width: 180}}>Result</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* Use previous data to stop page from jumping while new data loads */}\n          {ticks.map((tick, index) => {\n            // This is a hack for ticks that get stuck in started\n            const isTickStuckInStartedState =\n              index !== 0 &&\n              tick.status === InstigationTickStatus.STARTED &&\n              !paginationProps.hasPrevCursor;\n\n            return (\n              <tr key={tick.id}>\n                <td>\n                  <Timestamp timestamp={{unix: tick.timestamp}} timeFormat={{showTimezone: true}} />\n                </td>\n                <td>\n                  <TickStatusTag\n                    tick={tick}\n                    tickResultType=\"materializations\"\n                    isStuckStarted={isTickStuckInStartedState}\n                  />\n                </td>\n                <td>\n                  {isTickStuckInStartedState ? (\n                    ' - '\n                  ) : (\n                    <TimeElapsed startUnix={tick.timestamp} endUnix={tick.endTimestamp} />\n                  )}\n                </td>\n                <td>\n                  {[InstigationTickStatus.SKIPPED, InstigationTickStatus.SUCCESS].includes(\n                    tick.status,\n                  ) ? (\n                    <ButtonLink\n                      onClick={() => {\n                        setSelectedTick(tick);\n                      }}\n                    >\n                      <Body2>\n                        {tick.requestedAssetMaterializationCount} materializations requested\n                      </Body2>\n                    </ButtonLink>\n                  ) : (\n                    ' - '\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </TableWrapper>\n      <div style={{paddingBottom: '16px'}}>\n        <CursorHistoryControls {...paginationProps} />\n      </div>\n    </Box>\n  );\n};\n\nexport enum AutomaterializationTickStatusDisplay {\n  ALL = 'all',\n  FAILED = 'failed',\n  SUCCESS = 'success',\n}\nexport const AutomaterializationTickStatusDisplayMappings = {\n  [AutomaterializationTickStatusDisplay.ALL]: [\n    InstigationTickStatus.SUCCESS,\n    InstigationTickStatus.FAILURE,\n    InstigationTickStatus.STARTED,\n    InstigationTickStatus.SKIPPED,\n  ],\n  [AutomaterializationTickStatusDisplay.FAILED]: [InstigationTickStatus.FAILURE],\n  [AutomaterializationTickStatusDisplay.SUCCESS]: [InstigationTickStatus.SUCCESS],\n};\n\nconst StatusFilterItems = [\n  {key: AutomaterializationTickStatusDisplay.ALL, label: 'All ticks'},\n  {key: AutomaterializationTickStatusDisplay.SUCCESS, label: 'Requested'},\n  {key: AutomaterializationTickStatusDisplay.FAILED, label: 'Failed'},\n];\nconst StatusFilter = ({\n  status,\n  onChange,\n}: {\n  status: AutomaterializationTickStatusDisplay;\n  onChange: (value: AutomaterializationTickStatusDisplay) => void;\n}) => {\n  const activeItem = StatusFilterItems.find(({key}) => key === status);\n  return (\n    <Select<(typeof StatusFilterItems)[0]>\n      popoverProps={{position: 'bottom-right'}}\n      filterable={false}\n      activeItem={activeItem}\n      items={StatusFilterItems}\n      itemRenderer={(item, props) => {\n        return (\n          <MenuItem\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            key={item.key}\n            text={item.label}\n            style={{width: '300px'}}\n          />\n        );\n      }}\n      onItemSelect={(item) => onChange(item.key)}\n    >\n      <Button\n        rightIcon={<Icon name=\"arrow_drop_down\" />}\n        style={{minWidth: '200px', display: 'flex', justifyContent: 'space-between'}}\n      >\n        {activeItem?.label}\n      </Button>\n    </Select>\n  );\n};\n\nconst TableWrapper = styled(Table)`\n  th,\n  td {\n    vertical-align: middle !important;\n  }\n`;\n","import {useEffect, useMemo} from 'react';\n\nimport {ASSET_DAEMON_TICKS_QUERY} from './AssetDaemonTicksQuery';\nimport {\n  AutomaterializationEvaluationHistoryTable,\n  AutomaterializationTickStatusDisplay,\n  AutomaterializationTickStatusDisplayMappings,\n} from './AutomaterializationEvaluationHistoryTable';\nimport {\n  AssetDaemonTickFragment,\n  AssetDaemonTicksQuery,\n  AssetDaemonTicksQueryVariables,\n} from './types/AssetDaemonTicksQuery.types';\nimport {useQueryRefreshAtInterval} from '../../app/QueryRefresh';\nimport {InstigationTickStatus} from '../../graphql/types';\nimport {useQueryPersistedState} from '../../hooks/useQueryPersistedState';\nimport {useCursorPaginatedQuery} from '../../runs/useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 15;\n\ninterface Props {\n  setSelectedTick: (tick: AssetDaemonTickFragment | null) => void;\n  setTimerange: (range?: [number, number]) => void;\n  setParentStatuses: (statuses?: InstigationTickStatus[]) => void;\n  actionBarComponents?: React.ReactNode;\n}\n\nexport const InstanceAutomaterializationEvaluationHistoryTable = ({\n  setSelectedTick,\n  setTimerange,\n  setParentStatuses,\n  actionBarComponents,\n}: Props) => {\n  const [tickStatus, setTickStatus] = useQueryPersistedState<AutomaterializationTickStatusDisplay>({\n    queryKey: 'status',\n    defaults: {status: AutomaterializationTickStatusDisplay.ALL},\n  });\n\n  const statuses = useMemo(\n    () =>\n      AutomaterializationTickStatusDisplayMappings[tickStatus] ||\n      AutomaterializationTickStatusDisplayMappings[AutomaterializationTickStatusDisplay.ALL],\n    [tickStatus],\n  );\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    AssetDaemonTicksQuery,\n    AssetDaemonTicksQueryVariables\n  >({\n    query: ASSET_DAEMON_TICKS_QUERY,\n    variables: {\n      statuses: useMemo(() => Array.from(statuses), [statuses]),\n    },\n    nextCursorForResult: (data) => {\n      const ticks = data.autoMaterializeTicks;\n      if (!ticks.length) {\n        return undefined;\n      }\n      return ticks[PAGE_SIZE - 1]?.id;\n    },\n    getResultArray: (data) => {\n      if (!data?.autoMaterializeTicks) {\n        return [];\n      }\n      return data.autoMaterializeTicks;\n    },\n    pageSize: PAGE_SIZE,\n  });\n\n  // Only refresh if we're on the first page\n  useQueryRefreshAtInterval(queryResult, 10000, !paginationProps.hasPrevCursor);\n\n  useEffect(() => {\n    if (paginationProps.hasPrevCursor) {\n      const ticks = queryResult.data?.autoMaterializeTicks;\n      if (ticks && ticks.length) {\n        const start = ticks[ticks.length - 1]?.timestamp;\n        const end = ticks[0]?.endTimestamp;\n        if (start && end) {\n          setTimerange([start, end]);\n        }\n      }\n    } else {\n      setTimerange(undefined);\n    }\n  }, [paginationProps.hasPrevCursor, queryResult.data?.autoMaterializeTicks, setTimerange]);\n\n  useEffect(() => {\n    if (paginationProps.hasPrevCursor) {\n      setParentStatuses(Array.from(statuses));\n    } else {\n      setParentStatuses(undefined);\n    }\n  }, [paginationProps.hasPrevCursor, setParentStatuses, statuses]);\n\n  return (\n    <AutomaterializationEvaluationHistoryTable\n      loading={queryResult.loading}\n      ticks={queryResult.data?.autoMaterializeTicks || []}\n      paginationProps={paginationProps}\n      setSelectedTick={setSelectedTick}\n      tickStatus={tickStatus}\n      setTickStatus={setTickStatus}\n      actionBarComponents={actionBarComponents}\n    />\n  );\n};\n","import {\n  Box,\n  ButtonGroup,\n  Checkbox,\n  Colors,\n  Spinner,\n  Subtitle2,\n  Table,\n} from '@dagster-io/ui-components';\nimport {useCallback, useEffect, useMemo, useState} from 'react';\n\nimport {ASSET_DAEMON_TICKS_QUERY} from './AssetDaemonTicksQuery';\nimport {AutomaterializationTickDetailDialog} from './AutomaterializationTickDetailDialog';\nimport {InstanceAutomaterializationEvaluationHistoryTable} from './InstanceAutomaterializationEvaluationHistoryTable';\nimport {\n  AssetDaemonTickFragment,\n  AssetDaemonTicksQuery,\n  AssetDaemonTicksQueryVariables,\n} from './types/AssetDaemonTicksQuery.types';\nimport {useLazyQuery} from '../../apollo-client';\nimport {useConfirmation} from '../../app/CustomConfirmationProvider';\nimport {useUnscopedPermissions} from '../../app/Permissions';\nimport {useRefreshAtInterval} from '../../app/QueryRefresh';\nimport {InstigationTickStatus, RunsFilter} from '../../graphql/types';\nimport {useQueryPersistedState} from '../../hooks/useQueryPersistedState';\nimport {LiveTickTimeline} from '../../instigation/LiveTickTimeline2';\nimport {isStuckStartedTick} from '../../instigation/util';\nimport {RunsFeedTableWithFilters} from '../../runs/RunsFeedTable';\nimport {useAutomaterializeDaemonStatus} from '../useAutomaterializeDaemonStatus';\n\nconst MINUTE = 60 * 1000;\nconst THREE_MINUTES = 3 * MINUTE;\nconst FIVE_MINUTES = 5 * MINUTE;\nconst TWENTY_MINUTES = 20 * MINUTE;\n\nconst RUNS_FILTER: RunsFilter = {tags: [{key: 'dagster/auto_materialize', value: 'true'}]};\n\nexport const GlobalAutomaterializationContent = () => {\n  const automaterialize = useAutomaterializeDaemonStatus();\n  const confirm = useConfirmation();\n\n  const {permissions: {canToggleAutoMaterialize} = {}} = useUnscopedPermissions();\n\n  const [isPaused, setIsPaused] = useState(false);\n  const [statuses, setStatuses] = useState<undefined | InstigationTickStatus[]>(undefined);\n  const [timeRange, setTimerange] = useState<undefined | [number, number]>(undefined);\n\n  const getVariables = useCallback(\n    (now = Date.now()) => {\n      if (timeRange || statuses) {\n        return {\n          afterTimestamp: timeRange?.[0],\n          beforeTimestamp: timeRange?.[1],\n          statuses,\n        };\n      }\n      return {\n        afterTimestamp: (now - TWENTY_MINUTES) / 1000,\n      };\n    },\n    [statuses, timeRange],\n  );\n\n  const [fetch, queryResult] = useLazyQuery<AssetDaemonTicksQuery, AssetDaemonTicksQueryVariables>(\n    ASSET_DAEMON_TICKS_QUERY,\n  );\n\n  const refresh = useCallback(\n    async () => await fetch({variables: getVariables()}),\n    [fetch, getVariables],\n  );\n\n  // When the variables have changed (e.g. due to pagination), refresh.\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  useRefreshAtInterval({\n    refresh,\n    enabled: !isPaused && !timeRange && !statuses,\n    intervalMs: 2 * 1000,\n    leading: true,\n  });\n\n  const [selectedTick, setSelectedTick] = useState<AssetDaemonTickFragment | null>(null);\n\n  const [tableView, setTableView] = useQueryPersistedState<'evaluations' | 'runs'>(\n    useMemo(\n      () => ({\n        queryKey: 'view',\n        decode: ({view}) => (view === 'runs' ? 'runs' : 'evaluations'),\n        encode: (raw) => {\n          return {view: raw, cursor: undefined, statuses: undefined};\n        },\n      }),\n      [],\n    ),\n  );\n\n  const data = queryResult.data ?? queryResult.previousData;\n\n  const allTicks = useMemo(() => {\n    return data?.autoMaterializeTicks || [];\n  }, [data]);\n\n  const ticks = useMemo(\n    () => {\n      return (\n        allTicks?.map((tick, index) => {\n          const nextTick = allTicks[index - 1];\n          // For ticks that get stuck in \"Started\" state without an endTimestamp.\n          if (nextTick && isStuckStartedTick(tick, index)) {\n            const copy = {...tick};\n            copy.endTimestamp = nextTick.timestamp;\n            copy.status = InstigationTickStatus.FAILURE;\n            return copy;\n          }\n          return tick;\n        }) ?? []\n      );\n    },\n    // The allTicks array changes every 2 seconds because we query every 2 seconds.\n    // This would cause everything to re-render, to avoid that we memoize the ticks array that we pass around\n    // using the ID and status of the ticks.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(allTicks.map((tick) => `${tick.id}:${tick.status}`))],\n  );\n\n  const onHoverTick = useCallback(\n    (tick: AssetDaemonTickFragment | undefined) => {\n      setIsPaused(!!tick);\n    },\n    [setIsPaused],\n  );\n\n  const tableViewSwitch = (\n    <ButtonGroup\n      activeItems={new Set([tableView])}\n      buttons={[\n        {id: 'evaluations', label: 'Evaluations'},\n        {id: 'runs', label: 'Runs'},\n      ]}\n      onClick={(id: 'evaluations' | 'runs') => {\n        setTableView(id);\n      }}\n    />\n  );\n\n  return (\n    <>\n      <Table>\n        <tbody>\n          <tr>\n            <td>Running</td>\n            <td>\n              {automaterialize.loading ? (\n                <Spinner purpose=\"body-text\" />\n              ) : (\n                <Checkbox\n                  format=\"switch\"\n                  checked={!automaterialize.paused}\n                  disabled={!canToggleAutoMaterialize}\n                  onChange={async (e) => {\n                    const checked = e.target.checked;\n                    if (!checked) {\n                      await confirm({\n                        title: 'Pause Auto-materializing?',\n                        description:\n                          'Pausing Auto-materializing will prevent new materializations triggered by an Auto-materializing policy.',\n                      });\n                    }\n                    automaterialize.setPaused(!checked);\n                  }}\n                />\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td>Evaluation frequency</td>\n            <td>~30s</td>\n          </tr>\n        </tbody>\n      </Table>\n      <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n        <Subtitle2>Evaluation timeline</Subtitle2>\n      </Box>\n      {!data ? (\n        <Box\n          padding={{vertical: 48}}\n          flex={{direction: 'row', justifyContent: 'center', gap: 12, alignItems: 'center'}}\n        >\n          <Spinner purpose=\"body-text\" />\n          <div style={{color: Colors.textLight()}}>Loading evaluations…</div>\n        </Box>\n      ) : (\n        <>\n          <LiveTickTimeline\n            ticks={ticks}\n            tickResultType=\"materializations\"\n            onHoverTick={onHoverTick}\n            onSelectTick={setSelectedTick}\n            exactRange={timeRange}\n            timeRange={TWENTY_MINUTES}\n            tickGrid={FIVE_MINUTES}\n            timeAfter={THREE_MINUTES}\n          />\n          <AutomaterializationTickDetailDialog\n            tick={selectedTick}\n            isOpen={!!selectedTick}\n            close={() => {\n              setSelectedTick(null);\n            }}\n          />\n          {tableView === 'evaluations' ? (\n            <InstanceAutomaterializationEvaluationHistoryTable\n              setSelectedTick={setSelectedTick}\n              setParentStatuses={setStatuses}\n              setTimerange={setTimerange}\n              actionBarComponents={tableViewSwitch}\n            />\n          ) : (\n            <Box margin={{top: 32}} border=\"top\">\n              <RunsFeedTableWithFilters\n                filter={RUNS_FILTER}\n                actionBarComponents={tableViewSwitch}\n                includeRunsFromBackfills={true}\n              />\n            </Box>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import {Box, Page, PageHeader, Subtitle1} from '@dagster-io/ui-components';\nimport {Redirect} from 'react-router-dom';\nimport {observeEnabled} from 'shared/app/observeEnabled.oss';\n\nimport {GlobalAutomaterializationContent} from './GlobalAutomaterializationContent';\nimport {assertUnreachable} from '../../app/Util';\nimport {useTrackPageView} from '../../app/analytics';\nimport {AutomationTabs} from '../../automation/AutomationTabs';\nimport {useDocumentTitle} from '../../hooks/useDocumentTitle';\nimport {OverviewPageHeader} from '../../overview/OverviewPageHeader';\nimport {useAutoMaterializeSensorFlag} from '../AutoMaterializeSensorFlag';\n\n// Determine whether the user is flagged to see automaterialize policies as\n// sensors. If so, redirect to either the merged Automations page or the Sensors overview,\n// depending on their nav flag state.\nexport const AutomaterializationRoot = () => {\n  const automaterializeSensorsFlagState = useAutoMaterializeSensorFlag();\n  switch (automaterializeSensorsFlagState) {\n    case 'unknown':\n      return <div />; // Waiting for result\n    case 'has-global-amp':\n      return <GlobalAutomaterializationRoot />;\n    case 'has-sensor-amp':\n      return <Redirect to=\"/automation\" />;\n    default:\n      assertUnreachable(automaterializeSensorsFlagState);\n  }\n};\n\nconst GlobalAutomaterializationRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Automations | Auto-materialize');\n  const showTabs = observeEnabled();\n  return (\n    <Page>\n      {showTabs ? (\n        <>\n          <PageHeader title={<Subtitle1>Automation</Subtitle1>} />\n          <Box padding={{horizontal: 24}} border=\"bottom\">\n            <AutomationTabs tab=\"global-amp\" />\n          </Box>\n        </>\n      ) : (\n        <OverviewPageHeader tab=\"amp\" />\n      )}\n      <GlobalAutomaterializationContent />\n    </Page>\n  );\n};\n","import {Redirect, Switch} from 'react-router-dom';\n\nimport {OverviewActivityRoot} from './OverviewActivityRoot';\nimport {OverviewResourcesRoot} from './OverviewResourcesRoot';\nimport {Route} from '../app/Route';\nimport {AutomaterializationRoot} from '../assets/auto-materialization/AutomaterializationRoot';\n\nexport const OverviewRoot = () => {\n  return (\n    <Switch>\n      <Route path=\"/overview/activity\" isNestingRoute>\n        <OverviewActivityRoot />\n      </Route>\n      <Route path=\"/overview/jobs\" render={() => <Redirect to=\"/jobs\" />} />\n      <Route path=\"/overview/schedules\" render={() => <Redirect to=\"/automation\" />} />\n      <Route path=\"/overview/sensors\" render={() => <Redirect to=\"/automation\" />} />\n      <Route path=\"/overview/automation\" render={() => <AutomaterializationRoot />} />\n      <Route\n        path=\"/overview/backfills\"\n        exact\n        render={() => <Redirect to=\"/runs?view=backfills\" />}\n      />\n      <Route path=\"/overview/resources\">\n        <OverviewResourcesRoot />\n      </Route>\n      <Route path=\"*\" isNestingRoute render={() => <Redirect to=\"/overview/activity\" />} />\n    </Switch>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default OverviewRoot;\n","import {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Bucket {\n  repoAddress: RepoAddress;\n}\n\nexport const sortRepoBuckets = <B extends Bucket>(buckets: B[]) => {\n  return [...buckets].sort((a, b) => {\n    const aString = repoAddressAsHumanString(a.repoAddress);\n    const bString = repoAddressAsHumanString(b.repoAddress);\n    return aString.localeCompare(bString);\n  });\n};\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import {Box, Colors, Spinner, Tabs} from '@dagster-io/ui-components';\n\nimport {useAutoMaterializeSensorFlag} from '../assets/AutoMaterializeSensorFlag';\nimport {useAutomaterializeDaemonStatus} from '../assets/useAutomaterializeDaemonStatus';\nimport {TabLink} from '../ui/TabLink';\n\ninterface Props {\n  tab: 'schedules-and-sensors' | 'global-amp';\n}\n\nexport const AutomationTabs = (props: Props) => {\n  const {tab} = props;\n\n  const automaterialize = useAutomaterializeDaemonStatus();\n  const automaterializeSensorsFlagState = useAutoMaterializeSensorFlag();\n\n  return (\n    <Tabs selectedTabId={tab}>\n      <TabLink id=\"schedules-and-sensors\" title=\"Schedules and sensors\" to=\"/automation\" />\n      {automaterializeSensorsFlagState === 'has-global-amp' ? (\n        <TabLink\n          id=\"global-amp\"\n          title={\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <div>Auto-materialize</div>\n              {automaterialize.loading ? (\n                <Spinner purpose=\"body-text\" />\n              ) : (\n                <div\n                  style={{\n                    width: '10px',\n                    height: '10px',\n                    borderRadius: '50%',\n                    backgroundColor:\n                      automaterialize.paused === false ? Colors.accentBlue() : Colors.accentGray(),\n                  }}\n                />\n              )}\n            </Box>\n          }\n          to=\"/overview/automation\"\n        />\n      ) : null}\n    </Tabs>\n  );\n};\n","import {Caption, Colors, Tooltip, ifPlural, useViewport} from '@dagster-io/ui-components';\nimport dayjs from 'dayjs';\nimport {memo, useEffect, useMemo, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {Timestamp} from '../app/time/Timestamp';\nimport {TickResultType} from '../ticks/TickStatusTag';\nimport {HistoryTickFragment} from './types/InstigationUtils.types';\nimport {isStuckStartedTick} from './util';\nimport {AssetDaemonTickFragment} from '../assets/auto-materialization/types/AssetDaemonTicksQuery.types';\nimport {InstigationTickStatus} from '../graphql/types';\n\nimport '../util/dayjsExtensions';\n\nconst COLOR_MAP = {\n  [InstigationTickStatus.SUCCESS]: Colors.accentGreen(),\n  [InstigationTickStatus.FAILURE]: Colors.accentRed(),\n  [InstigationTickStatus.STARTED]: Colors.accentLavender(),\n  [InstigationTickStatus.SKIPPED]: Colors.backgroundDisabled(),\n};\n\nconst HoverColorMap = {\n  [InstigationTickStatus.SUCCESS]: Colors.accentGreenHover(),\n  [InstigationTickStatus.FAILURE]: Colors.accentRedHover(),\n  [InstigationTickStatus.STARTED]: Colors.accentLavenderHover(),\n  [InstigationTickStatus.SKIPPED]: Colors.accentGrayHover(),\n};\n\nconst REFRESH_INTERVAL = 100;\n\nconst MIN_WIDTH = 8; // At least 8px wide\n\nconst MINUTE = 60000;\n\nexport const LiveTickTimeline = <T extends HistoryTickFragment | AssetDaemonTickFragment>({\n  ticks,\n  tickResultType,\n  onHoverTick,\n  onSelectTick,\n  exactRange,\n  timeRange = MINUTE * 5, // 5 minutes,\n  tickGrid = MINUTE, // 1 minute\n  timeAfter = MINUTE, // 1 minute\n}: {\n  ticks: T[];\n  tickResultType: TickResultType;\n  onHoverTick: (InstigationTick?: T) => void;\n  onSelectTick: (InstigationTick: T) => void;\n  exactRange?: [number, number];\n  timeRange?: number;\n  tickGrid?: number;\n  timeAfter?: number;\n}) => {\n  const [now, setNow] = useState<number>(Date.now());\n  const [isPaused, setPaused] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!isPaused && !exactRange) {\n      const interval = setInterval(() => {\n        setNow(Date.now());\n      }, REFRESH_INTERVAL);\n      return () => clearInterval(interval);\n    }\n    return () => {};\n  }, [exactRange, isPaused]);\n\n  const maxX = exactRange?.[1] ? exactRange[1] * 1000 : now + timeAfter;\n  const minX = exactRange?.[0] ? exactRange[0] * 1000 : now - timeRange;\n  const showNowLine = minX < now && now < maxX;\n\n  const fullRange = maxX - minX;\n\n  const {viewport, containerProps} = useViewport();\n\n  const ticksReversed = useMemo(() => {\n    // Reverse ticks to make tab order correct\n    return ticks.filter((tick) => !tick.endTimestamp || tick.endTimestamp * 1000 > minX).reverse();\n  }, [ticks, minX]);\n\n  const ticksToDisplay = useMemo(() => {\n    return ticksReversed.map((tick, i) => {\n      const startX = getX(1000 * tick.timestamp!, viewport.width, minX, fullRange);\n      const endTimestamp = isStuckStartedTick(tick, ticksReversed.length - i - 1)\n        ? tick.timestamp\n        : tick.endTimestamp\n          ? tick.endTimestamp * 1000\n          : now;\n      const endX = getX(endTimestamp, viewport.width, minX, fullRange);\n      return {\n        ...tick,\n        width: Math.max(endX - startX, MIN_WIDTH),\n        startX,\n      };\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [minX, now, ticksReversed, fullRange, viewport.width]);\n\n  const timeTickGridDelta = Math.max((maxX - minX) / 25, tickGrid);\n  const tickGridDelta = timeTickGridDelta / 5;\n  const startTickGridX = Math.ceil(minX / tickGridDelta) * tickGridDelta;\n  const numTicks = Math.ceil((maxX - startTickGridX) / tickGridDelta);\n  const numLabels = Math.ceil(numTicks / 5);\n\n  const gridTicks = useMemo(() => {\n    const ticks = [];\n    for (let ii = 0; ii < numTicks; ii++) {\n      const time = startTickGridX + ii * tickGridDelta;\n      ticks.push({\n        time,\n        x: getX(time, viewport.width, minX, fullRange),\n        showLabel: ii % numLabels === 0,\n      });\n    }\n    return ticks;\n  }, [numTicks, startTickGridX, tickGridDelta, viewport.width, minX, fullRange, numLabels]);\n\n  return (\n    <div style={{marginRight: '8px'}}>\n      <div {...containerProps}>\n        <TicksWrapper>\n          {gridTicks.map((tick) => (\n            <GridTick\n              key={tick.time}\n              style={{\n                transform: `translateX(${tick.x}px)`,\n              }}\n            >\n              <GridTickLine />\n              {tick.showLabel ? (\n                <GridTickTime>\n                  <Caption>\n                    <Timestamp timestamp={{ms: tick.time}} timeFormat={{showSeconds: true}} />\n                  </Caption>\n                </GridTickTime>\n              ) : null}\n            </GridTick>\n          ))}\n          {ticksToDisplay.map((tick) => {\n            const count =\n              (tickResultType === 'materializations' || !('runIds' in tick)\n                ? tick.requestedAssetMaterializationCount\n                : tick.runIds?.length) ?? 0;\n            return (\n              <Tick\n                key={tick.id}\n                style={{\n                  transform: `translateX(${tick.startX}px)`,\n                  width: `${tick.width}px`,\n                }}\n                status={tick.status}\n                onMouseEnter={() => {\n                  onHoverTick(tick);\n                  setPaused(true);\n                }}\n                onMouseLeave={() => {\n                  onHoverTick();\n                  setPaused(false);\n                }}\n                onClick={() => {\n                  onSelectTick(tick);\n                }}\n              >\n                <Tooltip content={<TickTooltip tick={tick} tickResultType={tickResultType} />}>\n                  <div style={{width: tick.width + 'px', height: '80px'}}>\n                    {count > 0 ? count : null}\n                  </div>\n                </Tooltip>\n              </Tick>\n            );\n          })}\n          {showNowLine ? (\n            <NowIndicator\n              style={{\n                transform: `translateX(${getX(now, viewport.width, minX, fullRange)}px)`,\n              }}\n            />\n          ) : null}\n        </TicksWrapper>\n        <TimeAxisWrapper></TimeAxisWrapper>\n      </div>\n    </div>\n  );\n};\n\nconst TickTooltip = memo(\n  ({\n    tick,\n    tickResultType,\n  }: {\n    tick: HistoryTickFragment | AssetDaemonTickFragment;\n    tickResultType: TickResultType;\n  }) => {\n    const status = useMemo(() => {\n      if (tick.status === InstigationTickStatus.FAILURE) {\n        return 'Evaluation failed';\n      }\n      if (tick.status === InstigationTickStatus.STARTED) {\n        return 'Evaluating…';\n      }\n      if (tickResultType === 'materializations' || !('runs' in tick)) {\n        return `${tick.requestedAssetMaterializationCount} materialization${ifPlural(\n          tick.requestedAssetMaterializationCount,\n          '',\n          's',\n        )} requested`;\n      } else {\n        return `${tick.runs?.length || 0} run${ifPlural(tick.runs?.length, '', 's')} requested`;\n      }\n    }, [tick, tickResultType]);\n\n    const startTime = dayjs(1000 * tick.timestamp!);\n    const endTime = dayjs(tick.endTimestamp ? 1000 * tick.endTimestamp : Date.now());\n    const elapsedTime = startTime.to(endTime, true);\n\n    return (\n      <div>\n        <Caption as=\"div\">\n          <Timestamp timestamp={{unix: tick.timestamp}} timeFormat={{showSeconds: true}} />\n        </Caption>\n        <Caption as=\"div\">\n          {status} ({elapsedTime})\n        </Caption>\n        {tick.status === InstigationTickStatus.STARTED ? null : (\n          <Caption color={Colors.textLight()}>Click for details</Caption>\n        )}\n      </div>\n    );\n  },\n);\n\nconst TicksWrapper = styled.div`\n  position: relative;\n  height: 100px;\n  padding: 10px 2px;\n  border-bottom: 1px solid ${Colors.keylineDefault()};\n`;\n\nconst TimeAxisWrapper = styled.div`\n  height: 24px;\n`;\n\nconst Tick = styled.div<{status: InstigationTickStatus}>`\n  cursor: pointer;\n  position: absolute;\n  top: 10px;\n  height: 80px;\n  will-change: transform, width;\n  border-radius: 2px;\n  div {\n    place-content: center;\n    display: grid;\n  }\n  color: ${Colors.backgroundDefault()};\n  ${({status}) => `\n    background: ${COLOR_MAP[status]};\n    &:hover {\n      background: ${HoverColorMap[status]};\n    }\n  `}\n`;\n\nconst GridTick = styled.div`\n  position: absolute;\n  top: 0;\n  height: 124px;\n  will-change: transform;\n`;\nconst GridTickLine = styled.div`\n  position: absolute;\n  top: 0;\n  height: 108px;\n  width: 1px;\n  background: ${Colors.keylineDefault()};\n`;\nconst GridTickTime = styled.div`\n  height: 16px;\n  position: absolute;\n  bottom: 0;\n  width: 100px;\n  margin-left: -24px;\n`;\n\nconst NowIndicator = styled.div`\n  position: absolute;\n  top: 0;\n  height: 126px;\n  width: 2px;\n  background: ${Colors.accentPrimary()};\n  &:after {\n    content: 'Now';\n    position: absolute;\n    left: 0;\n    background: ${Colors.accentPrimary()};\n    color: ${Colors.accentReversed()};\n    bottom: 0;\n    font-size: 12px;\n    padding: 3px 4px;\n  }\n`;\n\nfunction getX(timestamp: number, viewportWidth: number, minX: number, timeRange: number) {\n  return (viewportWidth * (timestamp - minX)) / timeRange;\n}\n","import {DagsterRepoOption} from '../workspace/WorkspaceContext/util';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\n\nexport const visibleRepoKeys = (visibleRepos: DagsterRepoOption[]) => {\n  return new Set(\n    visibleRepos.map((option) =>\n      repoAddressAsHumanString(\n        buildRepoAddress(option.repository.name, option.repositoryLocation.name),\n      ),\n    ),\n  );\n};\n"],"names":["isStuckStartedTick","tick","index","endTimestamp","status","InstigationTickStatus","STARTED","timestamp","Date","now","THREE_DAYS","countPartitionsAddedOrDeleted","requests","type","reduce","sum","request","partitionKeys","length","TickStatusTag","tickResultType","isStuckStarted","showErrors","setShowErrors","useState","tag","useMemo","requestedItem","Tag","intent","icon","undefined","SKIPPED","BaseTag","fillColor","Colors","label","runKeys","message","Tooltip","position","content","skipReason","targetTagName","FAILURE","Box","flex","direction","alignItems","gap","error","ButtonLink","onClick","SUCCESS","count","requestedAssetMaterializationCount","runIds","successTag","ifPlural","Dialog","isOpen","title","style","width","DialogBody","PythonErrorInfo","DialogFooter","topBorder","Button","OverviewAssetsRoot","Header","TabButton","useTrackPageView","useDocumentTitle","assets","query","loading","useAllAssets","refreshState","useRefreshAtInterval","refresh","intervalMs","FIFTEEN_SECONDS","leading","groupedAssetsUnfiltered","React","groupAssets","groups","forEach","asset","definition","groupName","repositoryName","repository","name","key","target","push","Object","values","searchValue","setSearchValue","useQueryPersistedState","queryKey","encode","searchQuery","JSON","stringify","decode","qs","parse","groupedAssets","filter","group","UNGROUPED_ASSETS","toLowerCase","includes","orderedAssets","flatMap","map","useAssetsBaseData","parentRef","rowVirtualizer","useVirtualizer","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","items","getVirtualItems","div","top","zIndex","padding","horizontal","vertical","grow","selected","TextInput","value","onChange","e","placeholder","border","Alert","description","Link","to","justifyContent","Spinner","purpose","overflow","Container","ref","VirtualHeaderRow","Inner","$totalHeight","size","start","VirtualRow","height","HeaderRow","templateColumns","TEMPLATE_COLUMNS","sticky","HeaderCell","assetKeys","path","liveDataByNode","statuses","groupAssetsByStatus","repo","find","repoAddress","buildRepoAddress","location","containerProps","viewport","useViewport","isBatchStillLoading","keys","zeroOrBlank","Row","$height","$start","RowGrid","Cell","Icon","fontWeight","workspacePathFromAddress","RepositoryLinkWrapper","maxWidth","RepositoryLink","showRefresh","missing","SelectOnHover","getCount","case","StatusCase","PARTITIONS_MISSING","numMissing","adjective","borderRadius","failed","PARTITIONS_FAILED","numFailed","borderLeft","borderRight","borderBottom","display","inprogress","MATERIALIZING","numMaterializing","successful","PARTITIONS_MATERIALIZED","numMaterialized","backgroundColor","styled","children","RowCell","color","SelectWrapper","Select","itemPredicate","item","displayNameForAssetKey","toLocaleLowerCase","itemRenderer","LinkWithNoUnderline","assetDetailsPathForKey","MenuItem","text","paddingLeft","whiteSpace","textOverflow","Caption","partitionCountString","onItemSelect","OverviewTabs","tab","props","automaterialize","useAutomaterializeDaemonStatus","automaterializeSensorsFlagState","useAutoMaterializeSensorFlag","enableAssetHealthOverviewPreview","useContext","AssetFeatureContext","hideAMPTab","observeEnabled","Tabs","selectedTabId","TabLink","id","paused","alignSelf","QueryRefreshCountdown","queryData","rest","observeUIEnabled","PageHeader","tabs","ActivatableButton","AnchorButton","$active","css","header","OverviewPageHeader","_defaultTab","setDefaultTab","useStateWithStorage","json","defaultTab","tabButton","JoinedButtons","Switch","Route","OverviewTimelineRoot","isNestingRoute","render","Redirect","VirtualizedResourceRow","resourceType","parentResources","jobsOpsUsing","assetKeysUsing","schedulesUsing","sensorsUsing","resourceTypeSuccinct","succinctType","uses","span","MiddleTruncate","Mono","VirtualizedResourceHeader","OverviewResourcesTable","repos","useRef","allKeys","repoAddressAsHumanString","expandedKeys","onToggle","onToggleAll","useRepoExpansionState","OVERVIEW_COLLAPSED_KEY","flattened","flat","resources","resourceCount","repoKey","resource","duplicateRepoNames","findDuplicateRepoNames","row","ii","RepoRow","expanded","showLocation","has","rightElement","placement","SearchInputSpinner","tooltipContent","useDelayedState","canShowSpinner","margin","canShow","OverviewResourcesRoot","allRepos","visibleRepos","loadingNonAssets","workspaceLoading","data","cachedData","WorkspaceContext","defaults","search","repoCount","queryResultOverview","useQuery","OVERVIEW_RESOURCES_QUERY","fetchPolicy","notifyOnNetworkStatusChange","queryLoading","useQueryRefreshAtInterval","repoBuckets","visibleKeys","visibleRepoKeys","cachedEntries","__typename","workspaceOrError","buildBuckets","entries","locationEntries","sanitizedSearch","trim","anySearch","filteredBySearch","searchToLower","showSearchSpinner","RepoFilterButton","paddingTop","anyReposHidden","NonIdealState","strong","entry","locationOrLoadError","buckets","repositories","allTopLevelResourceDetails","sortRepoBuckets","gql","PYTHON_ERROR_FRAGMENT","RESOURCE_ENTRY_FRAGMENT","ASSET_DAEMON_TICK_FRAGMENT","AutomaterializationTickDetailDialog","memo","close","AssetKeysDialog","setIsOpen","DialogHeader","Timestamp","unix","timeFormat","showTimezone","gridTemplateRows","TickDetailSummary","TickMaterializationsTable","AutomaterializationEvaluationHistoryTable","ticks","tickStatus","setTickStatus","setSelectedTick","paginationProps","actionBarComponents","StatusFilter","TableWrapper","thead","tr","th","tbody","isTickStuckInStartedState","hasPrevCursor","td","TimeElapsed","startUnix","endUnix","Body2","paddingBottom","CursorHistoryControls","AutomaterializationTickStatusDisplay","AutomaterializationTickStatusDisplayMappings","activeItem","StatusFilterItems","popoverProps","filterable","active","modifiers","handleClick","rightIcon","minWidth","Table","InstanceAutomaterializationEvaluationHistoryTable","queryResult","setTimerange","setParentStatuses","ALL","useCursorPaginatedQuery","ASSET_DAEMON_TICKS_QUERY","variables","Array","from","nextCursorForResult","autoMaterializeTicks","PAGE_SIZE","getResultArray","pageSize","useEffect","end","RUNS_FILTER","THREE_MINUTES","tags","GlobalAutomaterializationContent","confirm","useConfirmation","permissions","canToggleAutoMaterialize","useUnscopedPermissions","isPaused","setIsPaused","setStatuses","timeRange","getVariables","useCallback","afterTimestamp","beforeTimestamp","TWENTY_MINUTES","fetch","useLazyQuery","enabled","selectedTick","tableView","setTableView","view","raw","cursor","previousData","allTicks","nextTick","copy","onHoverTick","tableViewSwitch","ButtonGroup","activeItems","Set","buttons","Checkbox","format","checked","disabled","setPaused","Subtitle2","LiveTickTimeline","onSelectTick","exactRange","tickGrid","FIVE_MINUTES","MINUTE","RunsFeedTableWithFilters","includeRunsFromBackfills","AutomaterializationRoot","GlobalAutomaterializationRoot","assertUnreachable","showTabs","Page","Subtitle1","AutomationTabs","OverviewRoot","OverviewActivityRoot","exact","sort","a","b","aString","bString","localeCompare","COLOR_MAP","HoverColorMap","timeAfter","interval","setInterval","setNow","REFRESH_INTERVAL","clearInterval","maxX","minX","showNowLine","fullRange","ticksReversed","reverse","ticksToDisplay","i","startX","getX","endX","viewportWidth","Math","max","MIN_WIDTH","tickGridDelta","startTickGridX","ceil","numTicks","numLabels","gridTicks","time","x","marginRight","TicksWrapper","GridTick","transform","GridTickLine","showLabel","GridTickTime","ms","showSeconds","Tick","onMouseEnter","onMouseLeave","TickTooltip","NowIndicator","TimeAxisWrapper","runs","startTime","dayjs","endTime","elapsedTime","as","option","repositoryLocation"],"sourceRoot":"","ignoreList":[]}