{"version":3,"file":"static/chunks/4223.557e05057f27dfbf.js","mappings":"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,QC3CA,SACA,gBACA,MACA,OACA,mBAA+B,iBAAwC,gBACvE,aACA,MACA,CAEA,QADA,MACA,IAAiB,WAAqB,KAGtC,OAFA,aACA,KACA,IAAkB,WAAqB,IACvC,sDACA,iBAEA,KACA,YAGA,MACA,gBACA,SACA,kBACA,CACA,CACA,QACA,MC1BA,QACA,sBACA,cACA,MAEA,OADA,OAAiC,IAAW,EAC5C,CACA,ECNA,YACA,eACA,qBACA,2BAAyC,uBAAwC,CAGjF,ECPA,OAGA,OACA,4CACA,YACA,GACE,KCNF,OAEA,uDAEA,yBAA4C,yEAA8E,UCJ1H,eAGA,ECJA,eACA,iDACA,IACA,sCACA,CAAG,SACH,wCACA,CACA,CAAC,GCPD,qDCAA,UACA,WACA,4BACA,SCHA,MACA,UAEA,aACA,GACA,oBACA,EACA,6DACA,mDAGA,OCXA,kCCAA,oDCIA,OACA,MACA,EAeA,cAEA,MAEA,+BAGA,EAEA,sDACA,gBACA,QAvBA,IACA,aACA,eACA,UACA,cAIA,IADA,QACA,UACA,aACA,IACA,YCpBA,UACA,QACA,+DEDA","sources":["webpack://_N_E/../ui-core/src/app/Util.tsx","webpack://_N_E/../ui-core/src/asset-graph/Utils.tsx","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/global","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/node module decorator","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup"],"sourcesContent":["import memoize from 'lodash/memoize';\nimport LRU from 'lru-cache';\n\nimport {timeByParts} from './timeByParts';\nimport {hashObject} from '../util/hashObject';\nimport {cache} from '../util/idb-lru-cache';\nimport {weakMapMemoize} from '../util/weakMapMemoize';\n\nfunction twoDigit(v: number) {\n  return `${v < 10 ? '0' : ''}${v}`;\n}\n\nfunction indexesOf(string: string, search: RegExp | string) {\n  const indexes: number[] = [];\n  const regexp = new RegExp(search, 'g');\n  let match = null;\n  while ((match = regexp.exec(string))) {\n    indexes.push(match.index);\n  }\n  return indexes;\n}\n\nexport const withMiddleTruncation = (text: string, options: {maxLength: number}) => {\n  const overflowLength = text.length - options.maxLength;\n  if (overflowLength <= 0) {\n    // No truncation is necessary\n    return text;\n  }\n  if (options.maxLength <= 10) {\n    // Middle truncation to this few characters (eg: abc…ef) is kind of silly\n    // and just using abcde… looks better.\n    return text.substring(0, options.maxLength - 1) + '…';\n  }\n\n  // Find all the breakpoints in the string\n  //   \"my_great_long_solid_name\"\n  //     ˄     ˄    ˄     ˄\n  const breakpoints = text.includes('__') ? indexesOf(text, /__/g) : indexesOf(text, /[_>\\.-]/g);\n\n  // Given no breakpoints, slice out the middle of the string. Adding\n  // the overflowLength here gives us the END point of the truncated region.\n  //\n  //   \"abc(defg)hijk\"\n  //            ˄\n  let breakpoint = Math.floor((text.length + overflowLength) / 2);\n\n  // Find the first breakpoint that exists AFTER enough characters that we could show\n  // at least three prefix letters after cutting out overflowLength.\n  const firstUsableIdx = breakpoints.findIndex((bp) => bp > overflowLength + 3);\n\n  if (firstUsableIdx !== -1) {\n    // If we found a usable breakpoint, see if we could instead choose the middle\n    // breakpoint which would give us more prefix. All else equal,\n    // \"my_great_l…_name\" looks better than \"my_g…_solid_name\"\n    const middleIdx = Math.floor(breakpoints.length / 2);\n    const breakpointAtIndex = breakpoints[Math.max(firstUsableIdx, middleIdx)];\n    if (breakpointAtIndex !== undefined) {\n      breakpoint = breakpointAtIndex;\n    }\n  }\n\n  const result = [\n    text.substring(0, breakpoint - (overflowLength + 1)),\n    text.substring(breakpoint),\n  ].join('…');\n\n  return result;\n};\n\nconst msecFormatter = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n/**\n * Return an i18n-formatted millisecond in seconds as a decimal, with no leading zero.\n */\nconst formatMsecMantissa = (msec: number) =>\n  msecFormatter(navigator.language)\n    .format(msec / 1000)\n    .slice(-4);\n\n/**\n * Format the time without milliseconds, rounding to :01 for non-zero value within (-1, 1)\n */\nexport const formatElapsedTimeWithoutMsec = (msec: number) => {\n  const {hours, minutes, seconds} = timeByParts(msec);\n  const negative = msec < 0;\n  const roundedSeconds = msec !== 0 && msec < 1000 && msec > -1000 ? 1 : seconds;\n  return `${negative ? '-' : ''}${hours}:${twoDigit(minutes)}:${twoDigit(roundedSeconds)}`;\n};\n\nexport const formatElapsedTimeWithMsec = (msec: number) => {\n  const {hours, minutes, seconds, milliseconds} = timeByParts(msec);\n\n  const negative = msec < 0;\n  const sign = negative ? '-' : '';\n  const hourStr = hours > 0 ? `${hours}:` : '';\n  const minuteStr = hours > 0 ? `${twoDigit(minutes)}:` : minutes > 0 ? `${minutes}:` : '';\n  const secStr = hours > 0 || minutes > 0 ? `${twoDigit(seconds)}` : `${seconds}`;\n  const mantissa = formatMsecMantissa(milliseconds);\n\n  return `${sign}${hourStr}${minuteStr}${secStr}${mantissa}`;\n};\n\nexport function breakOnUnderscores(str: string) {\n  return str.replace(/_/g, '_\\u200b');\n}\n\nexport function patchCopyToRemoveZeroWidthUnderscores() {\n  document.addEventListener('copy', (event) => {\n    if (!event.clipboardData) {\n      // afaik this is always defined, but the TS field is optional\n      return;\n    }\n\n    // Note: This returns the text of the current selection if DOM\n    // nodes are selected. If the selection on the page is text within\n    // codemirror or an input or textarea, this returns \"\" and we fall\n    // through to the default pasteboard content.\n    const text = (window.getSelection() || '').toString().replace(/_\\u200b/g, '_');\n\n    if (text.length) {\n      event.preventDefault();\n      event.clipboardData.setData('Text', text);\n    }\n  });\n}\n\nexport function asyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => PromiseLike<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n  hashSize?: number,\n): U {\n  const cache = new LRU<any, R>(hashSize || 50);\n  return (async (arg: T, ...rest: any[]) => {\n    const key = hashFn ? hashFn(arg, ...rest) : arg;\n    if (cache.has(key)) {\n      return Promise.resolve(cache.get(key) as R);\n    }\n    const r = (await fn(arg, ...rest)) as R;\n    cache.set(key, r);\n    return r;\n  }) as any;\n}\n\nexport const indexedDBAsyncMemoize = <R, U extends (...args: any[]) => Promise<R>>(\n  fn: U,\n  key: string,\n  hashFn?: (...args: Parameters<U>) => any,\n): U & {\n  isCached: (...args: Parameters<U>) => Promise<boolean>;\n} => {\n  let lru: ReturnType<typeof cache<R>> | undefined;\n  try {\n    lru = cache<R>({\n      dbName: `indexDBAsyncMemoizeDB${key}`,\n      maxCount: 50,\n    });\n  } catch {}\n\n  const hashToPromise: Record<string, Promise<R>> = {};\n\n  const genHashKey = async (...args: Parameters<U>) => {\n    return hashFn ? hashFn(...args) : hashObject(args);\n  };\n\n  const ret = weakMapMemoize(async (...args: Parameters<U>) => {\n    return new Promise<R>(async (resolve, reject) => {\n      const hashKey = await genHashKey(...args);\n      if (lru && (await lru.has(hashKey))) {\n        const entry = await lru.get(hashKey);\n        const value = entry?.value;\n        if (value) {\n          resolve(value);\n        } else {\n          reject(new Error('No value found'));\n        }\n        return;\n      } else if (!hashToPromise[hashKey]) {\n        hashToPromise[hashKey] = new Promise(async (res, rej) => {\n          try {\n            const result = await fn(...args);\n            // Resolve the promise before storing the result in IndexedDB\n            res(result);\n            if (lru) {\n              await lru.set(hashKey, result);\n              delete hashToPromise[hashKey];\n            }\n          } catch (e) {\n            rej(e);\n          }\n        });\n      }\n      try {\n        const result = await hashToPromise[hashKey]!;\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }) as any;\n  ret.isCached = async (...args: Parameters<U>) => {\n    const hashKey = await genHashKey(...args);\n    if (!lru) {\n      return false;\n    }\n    return await lru.has(hashKey);\n  };\n  return ret;\n};\n\nexport function assertUnreachable(value: never): never {\n  throw new Error(`Didn't expect to get here with value: ${JSON.stringify(value)}`);\n}\n\nexport function colorHash(str: string) {\n  let seed = 0;\n  for (let i = 0; i < str.length; i++) {\n    seed = ((seed << 5) - seed + str.charCodeAt(i)) | 0;\n  }\n\n  const random255 = (x: number) => {\n    const value = Math.sin(x) * 10000;\n    return 255 * (value - Math.floor(value));\n  };\n\n  return `rgb(${random255(seed++)}, ${random255(seed++)}, ${random255(seed++)})`;\n}\n\n// Useful for generating predicates to retain type information when\n// find/filtering GraphQL results. Example:\n//\n// const textMetadata = metadataEntries.filter(gqlTypePredicate('TextMetadataEntry'));\n//\n// `textMetadata` will be of type `TextMetadataEntry[]`.\nexport const gqlTypePredicate =\n  <T extends string>(typename: T) =>\n  <N extends {__typename: string}>(node: N): node is Extract<N, {__typename: T}> => {\n    return node.__typename === typename;\n  };\n\nexport const COMMON_COLLATOR = new Intl.Collator(navigator.language, {sensitivity: 'base'});\n","import {pathHorizontalDiagonal, pathVerticalDiagonal} from '@vx/shape';\nimport memoize from 'lodash/memoize';\n\nimport {AssetNodeKeyFragment} from './types/AssetNode.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {\n  AssetCheckLiveFragment,\n  AssetLatestInfoFragment,\n  AssetLatestInfoRunFragment,\n  AssetNodeLiveFragment,\n  AssetNodeLiveFreshnessInfoFragment,\n  AssetNodeLiveMaterializationFragment,\n  AssetNodeLiveObservationFragment,\n} from '../asset-data/types/AssetBaseDataProvider.types';\nimport {AssetStaleDataFragment} from '../asset-data/types/AssetStaleStatusDataProvider.types';\nimport {RunStatus} from '../graphql/types';\nimport {WorkspaceAssetFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\n\nexport enum AssetGraphViewType {\n  GLOBAL = 'global',\n  JOB = 'job',\n  GROUP = 'group',\n  CATALOG = 'catalog',\n}\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\ntype AssetNode = WorkspaceAssetFragment;\ntype AssetKey = AssetNodeKeyFragment;\ntype AssetLiveNode = AssetNodeLiveFragment & {\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n};\ntype AssetLatestInfo = AssetLatestInfoFragment;\n\nexport const __ASSET_JOB_PREFIX = '__ASSET_JOB';\nexport const __ANONYMOUS_ASSET_JOB_PREFIX = '__anonymous_asset_job';\n\nexport function isHiddenAssetGroupJob(jobName: string) {\n  return jobName.startsWith(__ASSET_JOB_PREFIX) || jobName.startsWith(__ANONYMOUS_ASSET_JOB_PREFIX);\n}\n\n// IMPORTANT: We use this, rather than AssetNode.id throughout this file because\n// the GraphQL interface exposes dependencyKeys, not dependencyIds. We also need\n// ways to \"build\" GraphId's locally, they can't always be server-provided.\n//\n// This value is NOT the same as AssetNode.id values provided by the server,\n// because JSON.stringify's whitespace behavior is different than Python's.\n//\nexport type GraphId = string;\nexport const toGraphId = (key: {path: string[]}): GraphId => JSON.stringify(key.path);\nexport const fromGraphId = (graphId: GraphId): AssetNodeKeyFragment => ({\n  path: JSON.parse(graphId),\n  __typename: 'AssetKey',\n});\n\nexport interface GraphNode {\n  id: GraphId;\n  assetKey: AssetKey;\n  definition: AssetNode;\n}\n\nexport interface GraphData {\n  nodes: {[assetId: GraphId]: GraphNode};\n  downstream: {[assetId: GraphId]: {[childAssetId: GraphId]: boolean}};\n  upstream: {[assetId: GraphId]: {[parentAssetId: GraphId]: boolean}};\n  expandedGroups?: string[];\n}\n\nexport const buildGraphData = (assetNodes: AssetNode[]) => {\n  const data: GraphData = {\n    nodes: {},\n    downstream: {},\n    upstream: {},\n  };\n\n  const addEdge = (upstreamGraphId: string, downstreamGraphId: string) => {\n    if (upstreamGraphId === downstreamGraphId) {\n      // Skip add edges for self-dependencies (eg: assets relying on older partitions of themselves)\n      return;\n    }\n    data.downstream[upstreamGraphId] = {\n      ...(data.downstream[upstreamGraphId] || {}),\n      [downstreamGraphId]: true,\n    };\n    data.upstream[downstreamGraphId] = {\n      ...(data.upstream[downstreamGraphId] || {}),\n      [upstreamGraphId]: true,\n    };\n  };\n\n  assetNodes.forEach((definition: AssetNode) => {\n    const id = toGraphId(definition.assetKey);\n    definition.dependencyKeys.forEach((key) => {\n      addEdge(toGraphId(key), id);\n    });\n    definition.dependedByKeys.forEach((key) => {\n      addEdge(id, toGraphId(key));\n    });\n\n    data.nodes[id] = {\n      id,\n      assetKey: definition.assetKey,\n      definition,\n    };\n  });\n\n  return data;\n};\n\nexport const nodeDependsOnSelf = (node: GraphNode) => {\n  const id = toGraphId(node.assetKey);\n  return node.definition.dependedByKeys.some((d) => toGraphId(d) === id);\n};\n\nexport const graphHasCycles = (graphData: GraphData) => {\n  const nodes = new Set(Object.keys(graphData.nodes));\n  const search = (stack: string[], node: string): boolean => {\n    if (stack.indexOf(node) !== -1) {\n      return true;\n    }\n    if (nodes.delete(node) === true) {\n      const nextStack = stack.concat(node);\n      return Object.keys(graphData.downstream[node] || {}).some((nextNode) =>\n        search(nextStack, nextNode),\n      );\n    }\n    return false;\n  };\n  let hasCycles = false;\n  while (nodes.size !== 0 && !hasCycles) {\n    hasCycles = search([], nodes.values().next().value!);\n  }\n  return hasCycles;\n};\n\nexport const buildSVGPathHorizontal = pathHorizontalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\nexport const buildSVGPathVertical = pathVerticalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nexport interface LiveDataForNode {\n  stepKey: string;\n  unstartedRunIds: string[]; // run in progress and step not started\n  inProgressRunIds: string[]; // run in progress and step in progress\n  runWhichFailedToMaterialize: AssetLatestInfoRunFragment | null;\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null;\n  lastMaterializationRunStatus: RunStatus | null; // only available if runWhichFailedToMaterialize is null\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n  lastObservation: AssetNodeLiveObservationFragment | null;\n  assetChecks: AssetCheckLiveFragment[];\n  partitionStats: {\n    numMaterialized: number;\n    numMaterializing: number;\n    numPartitions: number;\n    numFailed: number;\n  } | null;\n  opNames: string[];\n}\n\nexport type LiveDataForNodeWithStaleData = LiveDataForNode & {\n  staleStatus: AssetStaleDataFragment['staleStatus'];\n  staleCauses: AssetStaleDataFragment['staleCauses'];\n};\n\nexport const MISSING_LIVE_DATA: LiveDataForNodeWithStaleData = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  freshnessInfo: null,\n  lastMaterialization: null,\n  lastMaterializationRunStatus: null,\n  lastObservation: null,\n  partitionStats: null,\n  staleStatus: null,\n  staleCauses: [],\n  assetChecks: [],\n  opNames: [],\n  stepKey: '',\n};\n\nexport interface LiveData {\n  [assetId: GraphId]: LiveDataForNode;\n}\n\nexport const buildLiveDataForNode = (\n  assetNode: AssetLiveNode,\n  assetLatestInfo?: AssetLatestInfo,\n): LiveDataForNode => {\n  const lastMaterialization = assetNode.assetMaterializations[0] || null;\n  const lastObservation = assetNode.assetObservations[0] || null;\n  const latestRun = assetLatestInfo?.latestRun ? assetLatestInfo.latestRun : null;\n\n  return {\n    lastMaterialization,\n    lastMaterializationRunStatus:\n      latestRun && lastMaterialization?.runId === latestRun.id ? latestRun.status : null,\n    lastObservation,\n    assetChecks:\n      assetNode.assetChecksOrError.__typename === 'AssetChecks'\n        ? assetNode.assetChecksOrError.checks\n        : [],\n    stepKey: stepKeyForAsset(assetNode),\n    freshnessInfo: assetNode.freshnessInfo,\n    inProgressRunIds: assetLatestInfo?.inProgressRunIds || [],\n    unstartedRunIds: assetLatestInfo?.unstartedRunIds || [],\n    partitionStats: assetNode.partitionStats || null,\n    runWhichFailedToMaterialize:\n      latestRun && shouldDisplayRunFailure(latestRun, lastMaterialization) ? latestRun : null,\n    opNames: assetNode.opNames,\n  };\n};\n\nexport function shouldDisplayRunFailure(\n  latestRun: AssetLatestInfoRunFragment,\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null,\n) {\n  if (latestRun.status !== 'FAILURE') {\n    return false; // The run did not fail\n  }\n  if (lastMaterialization) {\n    if (lastMaterialization && lastMaterialization.runId === latestRun.id) {\n      // The run failed, but it successfully emitted the latest materialization event. This\n      // is caused by the run failing in a later step.\n      return false;\n    }\n    if (Number(lastMaterialization.timestamp) > Number(latestRun.endTime) * 1000) {\n      // The latest materialization is NEWER than the latest run. This is caused by the user\n      // reporting a materialization manually.\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function tokenForAssetKey(key: {path: string[]}) {\n  return key.path.join('/');\n}\n\nexport function tokenToAssetKey(token: string) {\n  return {path: token.split('/')};\n}\n\nexport function displayNameForAssetKey(key: {path: string[]}) {\n  return key.path.join(' / ');\n}\n\nexport function sortAssetKeys(a: {path: string[]}, b: {path: string[]}) {\n  return COMMON_COLLATOR.compare(displayNameForAssetKey(a), displayNameForAssetKey(b));\n}\n\nexport function stepKeyForAsset(definition: {opNames: string[]}) {\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  return firstOp || '';\n}\n\nexport const itemWithAssetKey = (key: {path: string[]}) => {\n  const token = tokenForAssetKey(key);\n  return (asset: {assetKey: {path: string[]}}) => tokenForAssetKey(asset.assetKey) === token;\n};\n\nexport const isGroupId = (str: string) => /^[^@:]+@[^@:]+:.+$/.test(str);\n\nexport const groupIdForNode = (node: GraphNode) =>\n  [\n    node.definition.repository.name,\n    '@',\n    node.definition.repository.location.name,\n    ':',\n    node.definition.groupName,\n  ].join('');\n\n// Inclusive\nexport const getUpstreamNodes = memoize(\n  (assetKey: AssetNodeKeyFragment, graphData: GraphData): AssetNodeKeyFragment[] => {\n    const upstream = Object.keys(graphData.upstream[toGraphId(assetKey)] || {});\n    const currentUpstream = upstream.map((graphId) => fromGraphId(graphId));\n    return [\n      assetKey,\n      ...currentUpstream,\n      ...currentUpstream.map((graphId) => getUpstreamNodes(graphId, graphData)).flat(),\n    ].filter(\n      (key, index, arr) =>\n        // Filter out non uniques\n        arr.findIndex((key2) => JSON.stringify(key2) === JSON.stringify(key)) === index,\n    );\n  },\n  (key, data) => JSON.stringify({key, data}),\n);\n","import * as dagre from 'dagre';\n\nimport {AssetNodeFacet} from './AssetNodeFacets';\nimport {GraphData, GraphId, GraphNode, groupIdForNode, isGroupId} from './Utils';\nimport type {IBounds, IPoint} from '../graph/common';\nimport {ChangeReason} from '../graphql/types';\n\nexport type AssetLayoutDirection = 'vertical' | 'horizontal';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n  expanded: boolean;\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphConfig = dagre.GraphLabel & {\n  direction: AssetLayoutDirection;\n  /** Pass `auto` to use getAssetNodeDimensions, or a value to give nodes a fixed height */\n  nodeHeight: number | 'auto';\n  /** Our asset groups have \"title bars\" - use these numbers to adjust the bounding boxes.\n   * Note that these adjustments are applied post-dagre layout. For padding > nodesep, you\n   * may need to set \"clusterpaddingtop\", \"clusterpaddingbottom\" so Dagre lays out the boxes\n   * with more spacing.\n   */\n  groupPaddingTop: number;\n  groupPaddingBottom: number;\n  groupRendering: 'if-varied' | 'always';\n\n  /** Supported in Dagre, just not documented. Additional spacing between group nodes */\n  clusterpaddingtop?: number;\n  clusterpaddingbottom?: number;\n  ranker?: 'tight-tree' | 'longest-path' | 'network-simplex';\n};\n\nexport type LayoutAssetGraphOptions = {\n  direction: AssetLayoutDirection;\n  overrides?: Partial<LayoutAssetGraphConfig>;\n  facets?: AssetNodeFacet[] | false;\n};\n\nexport const Config = {\n  horizontal: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 60,\n    rankdir: 'LR',\n    edgesep: 90,\n    nodesep: -10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 65,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n    clusterpaddingtop: 100,\n  },\n  vertical: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 20,\n    rankdir: 'TB',\n    nodesep: 40,\n    edgesep: 10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 55,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n  },\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  try {\n    return layoutAssetGraphImpl(graphData, opts);\n  } catch {\n    try {\n      return layoutAssetGraphImpl(graphData, {\n        ...opts,\n        overrides: {\n          ranker: 'longest-path',\n        },\n      });\n    } catch {\n      return layoutAssetGraphImpl(graphData, {...opts, overrides: {ranker: 'network-simplex'}});\n    }\n  }\n};\n\nexport const layoutAssetGraphImpl = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n  const config = Object.assign({}, Config[opts.direction], opts.overrides || {});\n  const facets = opts.facets ? new Set<AssetNodeFacet>(opts.facets) : false;\n\n  g.setGraph(config);\n  g.setDefaultEdgeLabel(() => ({}));\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n  const expandedGroups = graphData.expandedGroups || [];\n  const expandedGroupsSet = new Set(expandedGroups);\n\n  // Identify all the groups\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = groupIdForNode(node);\n      groups[id] = groups[id] || {\n        id,\n        expanded: expandedGroupsSet.has(id),\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const groupsPresent =\n    config.groupRendering === 'if-varied' ? Object.keys(groups).length > 1 : true;\n\n  if (groupsPresent) {\n    Object.keys(groups).forEach((groupId) => {\n      if (expandedGroupsSet.has(groupId)) {\n        // sized based on it's children, but \"border\" tells Dagre we want cluster-level\n        // spacing between the node and others. Necessary because our groups have title bars.\n        g.setNode(groupId, {borderType: 'borderRight'});\n      } else {\n        g.setNode(groupId, {width: ASSET_NODE_WIDTH, height: 110});\n      }\n    });\n  }\n\n  // Add all the nodes inside expanded groups to the graph\n  renderedNodes.forEach((node) => {\n    if (!groupsPresent || expandedGroupsSet.has(groupIdForNode(node))) {\n      const label =\n        config.nodeHeight === 'auto'\n          ? facets !== false\n            ? getAssetNodeDimensions2025(facets)\n            : getAssetNodeDimensions(node.definition)\n          : {width: ASSET_NODE_WIDTH, height: config.nodeHeight};\n\n      g.setNode(node.id, label);\n      if (groupsPresent && node.definition.groupName) {\n        g.setParent(node.id, groupIdForNode(node));\n      }\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n  const groupIdForAssetId = Object.fromEntries(\n    Object.entries(graphData.nodes).map(([id, node]) => [id, groupIdForNode(node)]),\n  );\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n      let v = upstreamId;\n      let w = downstreamId;\n\n      const wGroup = groupIdForAssetId[downstreamId];\n      if (groupsPresent && wGroup && !expandedGroupsSet.has(wGroup)) {\n        w = wGroup;\n      }\n      const vGroup = groupIdForAssetId[upstreamId];\n      if (groupsPresent && vGroup && !expandedGroupsSet.has(vGroup)) {\n        v = vGroup;\n      }\n      if (v === w) {\n        return;\n      }\n\n      g.setEdge({v, w}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 1;\n  let maxHeight = 1;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode?.x || !dagreNode?.width) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!isGroupId(id)) {\n      nodes[id] = {id, bounds};\n    } else if (!expandedGroupsSet.has(id)) {\n      const group = groups[id]!;\n      group.bounds = bounds;\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (groupsPresent) {\n    for (const node of renderedNodes) {\n      const nodeLayout = nodes[node.id];\n      if (nodeLayout && node.definition.groupName) {\n        const groupId = groupIdForNode(node);\n        const group = groups[groupId]!;\n        group.bounds =\n          group.bounds.width === 0\n            ? nodeLayout.bounds\n            : extendBounds(group.bounds, nodeLayout.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      if (group.expanded) {\n        group.bounds = padBounds(group.bounds, {\n          x: 15,\n          top: config.groupPaddingTop,\n          bottom: config.groupPaddingBottom,\n        });\n      }\n    }\n  }\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const w = g.node(e.w);\n    if (!v || !w) {\n      return;\n    }\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.direction === 'horizontal'\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: groupsPresent ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 30;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.direction === 'horizontal'\n    ? {width: 32 + 7.1 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 50}\n    : {width: 106, height: 50};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_WIDTH = 320;\nexport const ASSET_NODE_TAGS_HEIGHT = 28;\nexport const ASSET_NODE_STATUS_ROW_HEIGHT = 25;\n\nexport const ASSET_NODE_NAME_MAX_LENGTH = 31;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isMaterializable: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n  changedReasons?: ChangeReason[];\n}) => {\n  let height = 0;\n\n  height += ASSET_NODE_TAGS_HEIGHT; // top tags\n\n  height += 76; // box padding + border + name + description\n\n  if (def.isPartitioned && def.isMaterializable) {\n    height += ASSET_NODE_STATUS_ROW_HEIGHT;\n  }\n\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // status row\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // checks row\n  height += ASSET_NODE_TAGS_HEIGHT; // bottom tags\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n\nexport const getAssetNodeDimensions2025 = (facets: Set<AssetNodeFacet>) => {\n  let height = 0;\n\n  if (facets.size === 0) {\n    height = 60;\n  } else {\n    height = 50; // box padding + border + name\n    height += ASSET_NODE_STATUS_ROW_HEIGHT * facets.size;\n  }\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport type {IBounds, IPoint} from './common';\nimport {titleOfIO} from '../app/titleOfIO';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy, ranker: 'tight-tree'});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      conn.from.point = points[0]!;\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {createWorkerThread} from 'shared/workers/WorkerThread.oss';\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\ncreateWorkerThread(\n  async (postMessage: (message: any) => void, data: any) => {\n    switch (data.type) {\n      case 'layoutOpGraph': {\n        const {ops, opts} = data;\n        postMessage(layoutOpGraph(ops, opts));\n        break;\n      }\n      case 'layoutAssetGraph': {\n        const {graphData, opts} = data;\n        postMessage(layoutAssetGraph(graphData, opts));\n      }\n    }\n  },\n  (_postMessage: (message: any) => void, error: Error) => {\n    console.error(error);\n  },\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [6593,5752,6023,5748], () => (__webpack_require__(44223)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 6593) return \"static/chunks/framework-521ab4d753da6209.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + chunkId + \".\" + {\"5748\":\"f6a31d63a20c56f3\",\"5752\":\"6af0d557c0c11c1e\",\"6023\":\"23fbaa748a0dde27\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var policy;\n__webpack_require__.tt = () => {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: (url) => (url)\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));","__webpack_require__.p = \"BUILDTIME_ASSETPREFIX_REPLACE_ME/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t4223: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([6593,5752,6023,5748].map(__webpack_require__.e, __webpack_require__)).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["memoize","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Collator","navigator","language","sensitivity","toGraphId","key","JSON","stringify","path","parse","graphId","__typename","pathHorizontalDiagonal","source","s","target","x","y","pathVerticalDiagonal","isGroupId","test","str","groupIdForNode","node","definition","repository","name","location","groupName","join","assetKey","graphData","currentUpstream","upstream","keys","map","fromGraphId","getUpstreamNodes","flat","filter","index","arr","key2","data","horizontal","ranker","direction","marginx","MARGIN","marginy","ranksep","rankdir","edgesep","nodesep","nodeHeight","groupPaddingTop","groupPaddingBottom","groupRendering","clusterpaddingtop","vertical","opts","layoutAssetGraphImpl","overrides","g","dagre","Graph","compound","config","Object","assign","Config","facets","Set","setDefaultEdgeLabel","shouldRender","renderedNodes","values","nodes","expandedGroupsSet","expandedGroups","groups","id","expanded","has","repositoryName","repositoryLocationName","bounds","width","height","groupsPresent","length","forEach","groupId","setNode","borderType","ASSET_NODE_WIDTH","label","getAssetNodeDimensions2025","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","groupIdForAssetId","fromEntries","entries","downstream","upstreamId","graphDataDownstream","downstreamId","v","w","wGroup","vGroup","setEdge","weight","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","Math","max","nodeLayout","group","extendBounds","padBounds","top","bottom","edges","e","vXInset","wXInset","push","from","fromId","to","toId","min","ASSET_LINK_NAME_MAX_LENGTH","a","padding","b","xmin","ymin","def","isPartitioned","isMaterializable","ASSET_NODE_STATUS_ROW_HEIGHT","size","i","solid","DEFAULT_RESULT_NAME","flattenIO","arrays","array","titleOfIO","item","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","PARENT_INVOCATION_PADDING","yShift","result","link","idx","shiftDirection","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","sort","localeCompare","lastKey","layouts","IO_MINI_WIDTH","OP_WIDTH","io","_idx","port","PORT_INSET_X","collapsed","PORT_INSET_Y","layout","IO_HEIGHT","centeringAdjustment","l","appendStackedIOBoxes","inputLayouts","inputs","IO_THRESHOLD_FOR_MINI","input","dependsOn","opLayout","IO_INSET","OP_BASE_HEIGHT","assetNodes","description","OP_ASSETS_ROW_HEIGHT","outputLayouts","outputs","o","dependedBy","createWorkerThread","postMessage","type","ops","layoutOpGraph","parentIOPadding","MARGIN_BASE","parentOp","PARENT_DEFINITION_PADDING","setGraph","opNamesPresent","pipelineOps","dep","point","opName","edgeName","dagreNodes","find","conn","c","points","edge","parent","layoutParentGraphOp","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","EXTERNAL_DEPENDENCY_PADDING","boundingBottom","output","layoutAssetGraph","_postMessage","error","console"],"sourceRoot":"","ignoreList":[]}